import { Component, Inject, Input, NO_ERRORS_SCHEMA } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';
import { AppConfigService } from '../lib/services/app-config.service';
import { VisitService } from '../lib/services/visit.service';
import { DiagnosisService } from '../lib/services/diagnosis.service';
import { ProfileService } from '../lib/services/profile.service';
import { CommonModule } from '@angular/common';
import { MatIconModule } from '@angular/material/icon';
import { MatButtonModule } from '@angular/material/button';
import { checkIsEnabled, VISIT_SECTIONS } from './utils/visit-sections';
import { TranslateService, TranslateModule } from '@ngx-translate/core';
import moment from 'moment';
import { calculateBMI, getFieldValueByLanguage, isFeaturePresent, obsParse } from './utils/utility-functions';
import { conceptIds, doctorDetails, visitTypes } from './config/constant';
import * as pdfFonts from 'pdfmake/build/vfs_fonts';
import * as pdfMake from 'pdfmake/build/pdfmake';
import { precription } from "./utils/base64";
import { Observable } from 'rxjs';
import { EnvConfigService } from './services/env.service';
import { MatTabsModule } from '@angular/material/tabs';
import { MatTableModule } from '@angular/material/table';
import { DefaultImageDirective } from './directives/default-image.directive';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "../lib/services/app-config.service";
import * as i3 from "@ngx-translate/core";
import * as i4 from "../lib/services/visit.service";
import * as i5 from "../lib/services/diagnosis.service";
import * as i6 from "../lib/services/profile.service";
import * as i7 from "./services/env.service";
import * as i8 from "@angular/common";
import * as i9 from "@angular/material/icon";
import * as i10 from "@angular/material/tabs";
pdfMake.vfs = pdfFonts.pdfMake.vfs;
export class LibPresciptionComponent {
    data;
    dialogRef;
    appConfigService;
    translateService;
    visitService;
    diagnosisService;
    profileService;
    envService;
    isDownloadPrescription = false;
    visitId;
    download;
    envProduction;
    configPublicURL;
    baseUrl;
    logoImageURL;
    hwPhoneNo;
    visit;
    patient;
    pvsConfigs = [];
    pvsConstant = VISIT_SECTIONS;
    patientRegFields = [];
    completedEncounter = null;
    visitNotePresent;
    spokenWithPatient = 'No';
    notes = [];
    medicines = [];
    existingDiagnosis = [];
    advices = [];
    additionalInstructions = [];
    tests = [];
    referrals = [];
    followUp;
    consultedDoctor;
    followUpInstructions = [];
    dignosisSecondary = {};
    referralSecondary = "";
    conceptDiagnosis = '537bb20d-d09d-4f88-930b-cc45c7d662df';
    conceptNote = '162169AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
    conceptMed = 'c38c0c50-2fd2-4ae3-b7ba-7dd25adca4ca';
    conceptAdvice = '67a050c1-35e5-451c-a4ab-fff9d57b0db1';
    conceptTest = '23601d71-50e6-483f-968d-aeef3031346d';
    conceptReferral = '605b6f15-8f7a-4c45-b06d-14165f6974be';
    conceptFollow = 'e8caffd6-5d22-41c4-8d6a-bc31a44d0c86';
    conceptFollowUpInstruction = conceptIds.conceptFollowUpInstruction;
    conceptDiscussionSummary;
    signaturePicUrl = null;
    signatureFile = null;
    cheifComplaints = [];
    vitalObs = [];
    vitals = [];
    hasVitalsEnabled = false;
    hasPatientOtherEnabled = false;
    hasPatientAddressEnabled = false;
    visitStatus;
    clinicName;
    providerName;
    eventsSubscription;
    prodBoolean;
    discussionSummary = "";
    checkUpReasonData = [];
    constructor(data, dialogRef, appConfigService, translateService, visitService, diagnosisService, profileService, envService) {
        this.data = data;
        this.dialogRef = dialogRef;
        this.appConfigService = appConfigService;
        this.translateService = translateService;
        this.visitService = visitService;
        this.diagnosisService = diagnosisService;
        this.profileService = profileService;
        this.envService = envService;
        this.baseUrl = this.envService.getConfig('baseURL');
        this.configPublicURL = this.envService.getConfig('configPublicURL');
        this.envProduction = this.envService.getConfig('production');
    }
    ngOnInit() {
        this.appConfigService.load().then(() => {
            if (!this.appConfigService.patient_registration) {
                console.warn("AppConfigService is still undefined.");
                return;
            }
            this.vitals = [...(this.appConfigService.patient_vitals || [])];
            this.hasVitalsEnabled = this.appConfigService.patient_vitals_section || false;
            this.hasPatientAddressEnabled = this.appConfigService?.patient_reg_address || false;
            this.hasPatientOtherEnabled = this.appConfigService?.patient_reg_other || false;
            Object.keys(this.appConfigService.patient_registration).forEach(obj => {
                this.patientRegFields.push(...this.appConfigService.patient_registration[obj]
                    .filter((e) => e.is_enabled)
                    .map((e) => e.name));
            });
            this.logoImageURL = this.appConfigService.theme_config.find(obj => obj.key === 'logo')?.value;
            this.pvsConfigs = this.appConfigService.patient_visit_sections?.filter((pvs) => [
                this.pvsConstant['vitals'].key,
                this.pvsConstant['consultation_details'].key,
                this.pvsConstant['check_up_reason'].key
            ].includes(pvs.key));
        }).catch(error => {
            console.error("Failed to load AppConfigService:", error);
        });
        this.getVisit(this.isDownloadPrescription ? this.visitId : this.data.uuid);
        const basePath = `${window.location.origin}${window.location.pathname.includes('intelehealth') ? '/intelehealth' : ''}`;
        pdfMake.fonts = {
            DmSans: {
                normal: `${basePath}/assets/fonts/DM_Sans/DMSans-Regular.ttf`,
                bold: `${basePath}/assets/fonts/DM_Sans/DMSans-Bold.ttf`,
                italics: `${basePath}/assets/fonts/DM_Sans/DMSans-Italic.ttf`,
                bolditalics: `${basePath}/assets/fonts/DM_Sans/DMSans-BoldItalic.ttf`
            }
        };
        this.eventsSubscription = this.download?.subscribe((val) => { if (val) {
            this.downloadPrescription();
        } });
    }
    /**
    * Get visit
    * @param {string} uuid - Visit uuid
    * @returns {void}
    */
    getVisit(uuid) {
        this.visitService.fetchVisitDetails(this.baseUrl, uuid).subscribe((visit) => {
            if (visit) {
                this.visit = visit;
                this.checkVisitStatus(visit.encounters);
                this.visitService.patientInfo(this.baseUrl, visit.patient.uuid).subscribe((patient) => {
                    if (patient) {
                        this.patient = patient;
                        this.clinicName = visit.location.display;
                        this.getVisitProvider(visit.encounters);
                        // check if visit note exists for this visit
                        this.visitNotePresent = this.checkIfEncounterExists(visit.encounters, visitTypes.VISIT_NOTE);
                        if (this.visitNotePresent) {
                            this.checkIfPatientInteractionPresent(visit.attributes);
                            this.checkIfDiagnosisPresent();
                            this.checkIfNotePresent();
                            this.checkIfMedicationPresent();
                            this.checkIfAdvicePresent();
                            this.checkIfTestPresent();
                            this.checkIfReferralPresent();
                            this.checkIfFollowUpPresent();
                            this.checkIfFollowUpInstructionsPresent();
                            this.checkIfDiscussionSummaryPresent();
                        }
                        this.getCheckUpReason(visit.encounters);
                        this.getVitalObs(visit.encounters);
                        visit.encounters.forEach((encounter) => {
                            if (encounter.encounterType.display === visitTypes.VISIT_COMPLETE) {
                                this.completedEncounter = encounter;
                                encounter.obs.forEach((o) => {
                                    if (o.concept.display === 'Doctor details') {
                                        this.consultedDoctor = JSON.parse(o.value);
                                    }
                                });
                                encounter.encounterProviders.forEach((p) => {
                                    this.consultedDoctor.gender = p.provider.person.gender;
                                    this.consultedDoctor.person_uuid = p.provider.person.uuid;
                                    this.consultedDoctor.attributes = p.provider.attributes;
                                    if (this.isDownloadPrescription) {
                                        this.setSignature(this.signature?.value, this.signatureType?.value);
                                    }
                                });
                            }
                        });
                    }
                });
            }
        });
    }
    /**
     * Get chief complaints and patient visit reason/summary
     * @param {EncounterModel[]} encounters - Array of encounters
     * @return {void}
     */
    getCheckUpReason(encounters) {
        this.cheifComplaints = [];
        this.checkUpReasonData = [];
        encounters.forEach((enc) => {
            if (enc.encounterType.display === visitTypes.ADULTINITIAL) {
                enc.obs.forEach((obs) => {
                    if (obs.concept.display === visitTypes.CURRENT_COMPLAINT) {
                        const currentComplaint = this.visitService.getData(obs)?.value.split('<b>');
                        for (let i = 0; i < currentComplaint.length; i++) {
                            if (currentComplaint[i] && currentComplaint[i].length > 1) {
                                const obs1 = currentComplaint[i].split('<');
                                if (!obs1[0].match(visitTypes.ASSOCIATED_SYMPTOMS)) {
                                    this.cheifComplaints.push(obs1[0]);
                                }
                                const splitByBr = currentComplaint[i].split('<br/>');
                                if (splitByBr[0].includes(visitTypes.ASSOCIATED_SYMPTOMS)) {
                                    const obj1 = {};
                                    obj1.title = this.translateService.instant(visitTypes.ASSOCIATED_SYMPTOMS);
                                    obj1.data = [];
                                    for (let j = 1; j < splitByBr.length; j = j + 2) {
                                        if (splitByBr[j].trim() && splitByBr[j].trim().length > 1) {
                                            obj1.data.push({ key: splitByBr[j].replace('• ', '').replace(' -', ''), value: splitByBr[j + 1] });
                                        }
                                    }
                                    this.checkUpReasonData.push(obj1);
                                }
                                else {
                                    const obj1 = {};
                                    obj1.title = splitByBr[0].replace('</b>:', '');
                                    obj1.data = [];
                                    for (let k = 1; k < splitByBr.length; k++) {
                                        if (splitByBr[k].trim() && splitByBr[k].trim().length > 1) {
                                            const splitByDash = splitByBr[k].split('-');
                                            const processedStrings = splitByDash?.slice(1, splitByDash.length).join('-').split(".").map(itemList => {
                                                let splitByHyphen = itemList.split(" - ");
                                                let value = splitByHyphen.pop() || "";
                                                splitByHyphen.push(value);
                                                return splitByHyphen.join(" - ");
                                            });
                                            const resultString = processedStrings.join(". ");
                                            obj1.data.push({ key: splitByDash[0].replace('• ', ''), value: resultString });
                                        }
                                    }
                                    this.checkUpReasonData.push(obj1);
                                }
                            }
                        }
                    }
                });
            }
        });
    }
    /**
    * Get vital observations from the vital encounter
    * @param {EncounterModel[]} encounters - Array of encounters
    * @return {void}
    */
    getVitalObs(encounters) {
        encounters.forEach((enc) => {
            if (enc.encounterType.display === visitTypes.VITALS) {
                this.vitalObs = enc.obs;
            }
        });
    }
    /**
    * Check if patient interaction visit attrubute present or not
    * @param {VisitAttributeModel[]} attributes - Array of visit attributes
    * @returns {void}
    */
    checkIfPatientInteractionPresent(attributes) {
        attributes.forEach((attr) => {
            if (attr.attributeType.display === visitTypes.PATIENT_INTERACTION) {
                this.spokenWithPatient = attr.value;
            }
        });
    }
    /**
    * Get diagnosis for the visit
    * @returns {void}
    */
    checkIfDiagnosisPresent() {
        this.existingDiagnosis = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, conceptIds.conceptDiagnosis).subscribe((response) => {
            console.log(response, "response>>>>>>>>>>>");
            response.results.forEach((obs) => {
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    if (this.appConfigService.patient_visit_summary?.dp_dignosis_secondary) {
                        this.dignosisSecondary = obsParse(obs.value);
                    }
                    else {
                        this.existingDiagnosis.push({
                            diagnosisName: obs.value.split(':')[0].trim(),
                            diagnosisType: obs.value.split(':')[1].split('&')[0].trim(),
                            diagnosisStatus: obs.value.split(':')[1].split('&')[1].trim(),
                            uuid: obs.uuid
                        });
                    }
                }
            });
        });
    }
    /**
    * Get notes for the visit
    * @returns {void}
    */
    checkIfNotePresent() {
        this.notes = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptNote).subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    this.notes.push(obs);
                }
            });
        });
    }
    /**
  * Get discussion summary present
  * @returns {void}
  */
    checkIfDiscussionSummaryPresent() {
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptDiscussionSummary).subscribe((response) => {
            response.results.forEach((obs) => {
                console.log(obs, "BJC");
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    this.discussionSummary = obs.value;
                }
            });
        });
    }
    /**
    * Get medicines for the visit
    * @returns {void}
    */
    checkIfMedicationPresent() {
        this.medicines = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptMed).subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    if (obs.value.includes(':')) {
                        this.medicines.push({
                            drug: obs.value?.split(':')[0],
                            strength: obs.value?.split(':')[1],
                            days: obs.value?.split(':')[2],
                            timing: obs.value?.split(':')[3],
                            remark: obs.value?.split(':')[4],
                            frequency: obs.value?.split(':')[5] ? obs.value?.split(':')[5] : '',
                            uuid: obs.uuid
                        });
                    }
                    else {
                        this.additionalInstructions.push(obs);
                    }
                }
            });
        });
    }
    /**
    * Get advices for the visit
    * @returns {void}
    */
    checkIfAdvicePresent() {
        this.advices = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptAdvice)
            .subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter && obs.encounter.visit.uuid === this.visit.uuid) {
                    if (!obs.value.includes('</a>')) {
                        this.advices.push(obs);
                    }
                }
            });
        });
    }
    /**
    * Get tests for the visit
    * @returns {void}
    */
    checkIfTestPresent() {
        this.tests = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptTest)
            .subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter && obs.encounter.visit.uuid === this.visit.uuid) {
                    this.tests.push(obs);
                }
            });
        });
    }
    /**
    * Get referrals for the visit
    * @returns {void}
    */
    checkIfReferralPresent() {
        this.referrals = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, conceptIds.conceptReferral)
            .subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter && obs.encounter.visit.uuid === this.visit.uuid) {
                    if (this.appConfigService.patient_visit_summary?.dp_referral_secondary)
                        this.referralSecondary = obs.value;
                    else if (obs.value.includes(":")) {
                        const obs_values = obs.value.split(':');
                        this.referrals.push({ uuid: obs.uuid, speciality: obs_values[0].trim(), facility: obs_values[1].trim(), priority: obs_values[2].trim(), reason: obs_values[3].trim() ? obs_values[3].trim() : '-' });
                    }
                }
            });
        });
    }
    /**
    * Get followup for the visit
    * @returns {void}
    */
    checkIfFollowUpPresent() {
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptFollow).subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    let followUpDate, followUpTime, followUpReason, wantFollowUp = 'No', followUpType;
                    if (obs.value.includes('Time:')) {
                        const result = obs.value.split(',').filter(Boolean);
                        const time = result.find((v) => v.includes('Time:'))?.split('Time:')?.[1]?.trim();
                        const remark = result.find((v) => v.includes('Remark:'))?.split('Remark:')?.[1]?.trim();
                        const type = result.find((v) => v.includes('Type:'))?.split('Type:')?.[1]?.trim();
                        followUpDate = moment(result[0]).format('YYYY-MM-DD');
                        followUpTime = time ? time : null;
                        followUpReason = remark ? remark : null;
                        followUpType = type && type !== 'null' ? type : null;
                        wantFollowUp = 'Yes';
                    }
                    this.followUp = {
                        present: true,
                        wantFollowUp,
                        followUpDate,
                        followUpTime,
                        followUpReason,
                        followUpType
                    };
                }
            });
        });
    }
    /**
    * Get patient identifier for a given identifier type
    * @param {string} identifierType - Identifier type
    * @returns {string} - Patient identifier for a given identifier type
    */
    getPatientIdentifier(identifierType) {
        let identifier = '';
        if (this.patient) {
            this.patient.identifiers.forEach((idf) => {
                if (idf.identifierType.display == identifierType) {
                    identifier = idf.identifier;
                }
            });
        }
        return identifier;
    }
    /**
    * Check visit status
    * @param {EncounterModel[]} encounters - Array of encounters
    * @return {void}
    */
    checkVisitStatus(encounters) {
        if (this.checkIfEncounterExists(encounters, visitTypes.PATIENT_EXIT_SURVEY)) {
            this.visitStatus = visitTypes.ENDED_VISIT;
        }
        else if (this.checkIfEncounterExists(encounters, visitTypes.VISIT_COMPLETE)) {
            this.visitStatus = visitTypes.COMPLETED_VISIT;
        }
        else if (this.checkIfEncounterExists(encounters, visitTypes.VISIT_NOTE)) {
            this.visitStatus = visitTypes.IN_PROGRESS_VISIT;
        }
        else if (this.checkIfEncounterExists(encounters, visitTypes.FLAGGED)) {
            this.visitStatus = visitTypes.PRIORITY_VISIT;
        }
        else if (this.checkIfEncounterExists(encounters, visitTypes.ADULTINITIAL) || this.checkIfEncounterExists(encounters, visitTypes.VITALS)) {
            this.visitStatus = visitTypes.AWAITING_VISIT;
        }
    }
    /**
    * Get encounter for a given encounter type
    * @param {EncounterModel[]} encounters - Array of encounters
    * @param {string} encounterType - Encounter type
    * @return {EncounterModel} - Encounter for a given encounter type
    */
    checkIfEncounterExists(encounters, encounterType) {
        return encounters.find(({ display = '' }) => display.includes(encounterType));
    }
    /**
    * Get age of patient from birthdate
    * @param {string} birthdate - Birthdate
    * @return {string} - Age
    */
    getAge(birthdate) {
        const years = moment().diff(birthdate, 'years');
        const months = moment().diff(birthdate, 'months');
        const days = moment().diff(birthdate, 'days');
        if (years > 1) {
            return `${years} years`;
        }
        else if (months > 1) {
            return `${months} months`;
        }
        else {
            return `${days} days`;
        }
    }
    /**
    * Get person attribute value for a given attribute type
    * @param {str'} attrType - Person attribute type
    * @return {any} - Value for a given attribute type
    */
    getPersonAttributeValue(attrType) {
        let val = this.translateService.instant('NA');
        if (this.patient) {
            this.patient.person.attributes.forEach((attr) => {
                if (attrType === attr.attributeType.display) {
                    val = attr.value;
                }
            });
        }
        return val;
    }
    /**
    * Replcae the string charaters with *
    * @param {string} str - Original string
    * @return {string} - Modified string
    */
    replaceWithStar(str) {
        const n = str.length;
        return str.replace(str.substring(0, n - 4), '******');
    }
    /**
    * Get visit provider details
    * @param {EncounterModel[]} encounters - Array of visit encounters
    * @return {void}
    */
    getVisitProvider(encounters) {
        encounters.forEach((encounter) => {
            if (encounter.display.match(visitTypes.ADULTINITIAL) !== null) {
                this.providerName = encounter.encounterProviders[0].display;
                encounter.encounterProviders[0].provider.attributes.forEach((attribute) => {
                    if (attribute.display.match(doctorDetails.PHONE_NUMBER) != null) {
                        this.hwPhoneNo = attribute.value;
                    }
                });
            }
        });
    }
    /**
    * Close modal
    * @param {boolean} val - Dialog result
    * @return {void}
    */
    close(val) {
        this.dialogRef.close(val);
    }
    /**
    * Getter for is prescription modal
    * @return {boolean} - True if prescription modal else false
    */
    get isPrescriptionModal() {
        return location.hash.includes('#/i/');
    }
    /**
    * Getter for doctor provider attributes
    * @return {ProviderAttributeModel[]} - Doctor provider attributes
    */
    get attributes() {
        return Array.isArray(this.consultedDoctor?.attributes) ? this.consultedDoctor.attributes : [];
    }
    /**
    * Getter for signature type
    * @return {any} - Signature type
    */
    get signatureType() {
        return this.attributes.find((a) => a?.attributeType?.display === doctorDetails.SIGNATURE_TYPE);
    }
    /**
    * Getter for signature
    * @return {any} - Signature
    */
    get signature() {
        return this.attributes.find((a) => a?.attributeType?.display === doctorDetails.SIGNATURE);
    }
    /**
    * Detect MIME type from the base 64 url
    * @param {string} b64 - Base64 url
    * @return {string} - MIME type
    */
    detectMimeType(b64) {
        return this.profileService.detectMimeType(b64);
    }
    /**
    * Set signature
    * @param {string} signature - Signature
    * @param {string} signatureType - Signature type
    * @return {void}
    */
    setSignature(signature, signatureType) {
        switch (signatureType) {
            case 'Draw':
            case 'Generate':
            case 'Upload':
                this.signaturePicUrl = signature;
                fetch(signature)
                    .then(res => res.blob())
                    .then(blob => {
                    this.signatureFile = new File([blob], 'intelehealth', { type: this.detectMimeType(this.signaturePicUrl.split(',')[0]) });
                });
                break;
            default:
                break;
        }
    }
    /**
    * Get rows for make pdf doc defination for a given type
    * @param {string} type - row type
    * @return {any} - Rows
    */
    getRecords(type) {
        const records = [];
        switch (type) {
            case 'diagnosis':
                if (this.appConfigService.patient_visit_summary?.dp_dignosis_secondary) {
                    records.push([this.dignosisSecondary['diagnosis'], this.dignosisSecondary['type'], this.dignosisSecondary['tnm'], this.dignosisSecondary['otherStaging']]);
                }
                else if (this.existingDiagnosis.length) {
                    this.existingDiagnosis.forEach(d => {
                        records.push([d.diagnosisName, d.diagnosisType, d.diagnosisStatus]);
                    });
                }
                else {
                    records.push([{ text: 'No diagnosis added', colSpan: 3, alignment: 'center' }]);
                }
                break;
            case 'medication':
                if (this.medicines.length) {
                    this.medicines.forEach(m => {
                        records.push([m.drug, m.strength, m.days, m.timing, m.frequency, m.remark]);
                    });
                }
                else {
                    records.push([{ text: 'No medicines added', colSpan: 6, alignment: 'center' }]);
                }
                break;
            case 'additionalInstruction':
                if (this.additionalInstructions.length) {
                    this.additionalInstructions.forEach(ai => {
                        records.push({ text: ai.value, margin: [0, 5, 0, 5] });
                    });
                }
                else if (!this.appConfigService?.patient_visit_summary?.dp_medication_secondary) {
                    records.push([{ text: 'No additional instructions added' }]);
                }
                break;
            case 'advice':
                if (this.advices.length) {
                    this.advices.forEach(a => {
                        records.push({ text: a.value, margin: [0, 5, 0, 5] });
                    });
                }
                else {
                    records.push([{ text: 'No advices added' }]);
                }
                break;
            case 'test':
                if (this.tests.length) {
                    this.tests.forEach(t => {
                        records.push({ text: t.value, margin: [0, 5, 0, 5] });
                    });
                }
                else {
                    records.push([{ text: 'No tests added' }]);
                }
                break;
            case 'referral':
                const referralFacility = this.isFeatureAvailable('referralFacility', true);
                const priorityOfReferral = this.isFeatureAvailable('priorityOfReferral', true);
                let length = 2;
                if (this.appConfigService.patient_visit_summary?.dp_referral_secondary && this.referralSecondary) {
                    records.push([{ text: this.referralSecondary, colSpan: length }]);
                }
                else if (this.referrals.length) {
                    this.referrals.forEach(r => {
                        const referral = [r.speciality];
                        if (referralFacility)
                            referral.push(r.facility);
                        if (priorityOfReferral)
                            referral.push(r.priority);
                        referral.push(r.reason ? r.reason : '-');
                        records.push(referral);
                        length = referral.length;
                    });
                }
                else {
                    if (referralFacility)
                        length += 1;
                    if (priorityOfReferral)
                        length += 1;
                    records.push([{ text: 'No referrals added', colSpan: length, alignment: 'center' }]);
                }
                break;
            case 'followUp':
                if (this.followUp) {
                    records.push([this.followUp.wantFollowUp, (this.isFeatureAvailable('followUpType') ? [this.followUp.followUpType ?? '-'] : []), this.followUp.followUpDate ? moment(this.followUp.followUpDate).format('DD MMM YYYY') : '-',
                        this.followUp.followUpTime ?? '-', this.followUp.followUpReason ?? '-']);
                }
                else {
                    records.push([{ text: 'No follow-up added', colSpan: this.isFeatureAvailable('followUpType') ? 5 : 4, alignment: 'center' }]);
                }
                break;
            case 'cheifComplaint':
                if (this.appConfigService?.patient_visit_summary?.dp_dignosis_secondary && this.checkUpReasonData.length > 0) {
                    this.checkUpReasonData[0].data.forEach((cc) => {
                        records.push({ text: [{ text: cc.key, bold: true }, cc.value.changingThisBreaksApplicationSecurity], margin: [0, 5, 0, 5] });
                    });
                }
                else if (this.cheifComplaints.length) {
                    this.cheifComplaints.forEach(cc => {
                        records.push({ text: [{ text: cc, bold: true }, ``], margin: [0, 5, 0, 5] });
                    });
                }
                break;
            case visitTypes.VITALS:
                this.vitals.forEach((v) => {
                    records.push({ text: [{ text: `${v.lang !== null ? this.getLanguageValue(v) : v.name} : `, bold: true }, `${this.getObsValue(v.uuid, v.key) ? this.getObsValue(v.uuid, v.key) : `No information`}`], margin: [0, 5, 0, 5] });
                });
                break;
            case 'followUpInstructions':
                if (this.followUpInstructions) {
                    this.followUpInstructions.forEach(t => {
                        records.push({ text: t.value, margin: [0, 5, 0, 5] });
                    });
                }
                else {
                    records.push([{ text: 'No Follow Up Instructions added' }]);
                }
                break;
        }
        return records;
    }
    /**
    * Get image from url as a base64
    * @param {string} url - Image url
    * @return {Promise} - Promise containing base64 image
    */
    // async toObjectUrl(url: string): Promise<string | null> {
    //   try {
    //     const response = await fetch(url, { mode: 'cors' });
    //     if (!response.ok) {
    //       throw new Error(`Failed to fetch image: ${response.statusText}`);
    //     }
    //     const blob = await response.blob();
    //     if (!blob.type.startsWith('image/')) {
    //       throw new Error('Fetched resource is not an image');
    //     }
    //     return new Promise((resolve, reject) => {
    //       const reader = new FileReader();
    //       reader.onloadend = () => resolve(reader.result as string);
    //       reader.onerror = () => reject(new Error('Failed to read image'));
    //       reader.readAsDataURL(blob);
    //     });
    //   } catch (error) {
    //     console.error('Error fetching or processing image:', error);
    //     return null;
    //   }
    // }
    toObjectUrl(url) {
        return fetch(url)
            .then((response) => {
            return response.blob();
        })
            .then(blob => {
            return new Promise((resolve, _) => {
                if (!blob) {
                    resolve('');
                }
                const reader = new FileReader();
                reader.onloadend = () => resolve(reader.result);
                reader.readAsDataURL(blob);
            });
        });
    }
    ngOnDestroy() {
        this.eventsSubscription?.unsubscribe();
    }
    /**
   * Get vital value for a given vital uuid
   * @param {string} uuid - Vital uuid
   * @return {any} - Obs value
   */
    getObsValue(uuid, key) {
        const v = this.vitalObs.find(e => e.concept.uuid === uuid);
        const value = v?.value ? (typeof v.value == 'object') ? v.value?.display : v.value : null;
        if (!value && key === 'bmi') {
            return calculateBMI(this.vitals, this.vitalObs);
        }
        return value;
    }
    checkPatientRegField(fieldName) {
        return this.patientRegFields.indexOf(fieldName) !== -1;
    }
    get shouldShowProfilePhoto() {
        return this.checkPatientRegField('Profile Photo') && Boolean(this.patient?.person?.uuid);
    }
    getPersonalInfo() {
        const data = {
            colSpan: 4,
            layout: 'noBorders',
            table: {
                widths: ['*', '*', '*', '*'],
                body: [
                    [
                        {
                            colSpan: 4,
                            text: `Personal Information`,
                            style: 'subheader'
                        },
                        '',
                        '',
                        ''
                    ]
                ]
            }
        };
        let other = [];
        this.appConfigService.patient_registration['personal'].forEach((e) => {
            let value;
            switch (e.name) {
                case 'Gender':
                    value = this.patient?.person.gender == 'M' ? 'Male' : 'Female';
                    break;
                case 'Age':
                    value = this.patient?.person.age + ' years';
                    break;
                case 'Date of Birth':
                    value = new Date(this.patient?.person.birthdate).toDateString();
                    break;
                case 'Phone Number':
                    value = this.getPersonAttributeValue('Telephone Number');
                    break;
                case 'Guardian Type':
                    value = this.getPersonAttributeValue('Guardian Type');
                    break;
                case 'Guardian Name':
                    value = this.getPersonAttributeValue('Guardian Name');
                    break;
                case 'Emergency Contact Name':
                    value = this.getPersonAttributeValue('Emergency Contact Name');
                    break;
                case 'Emergency Contact Number':
                    value = this.getPersonAttributeValue('Emergency Contact Number');
                    break;
                case 'Contact Type':
                    value = this.getPersonAttributeValue('Contact Type');
                    break;
                case 'Email':
                    value = this.getPersonAttributeValue('Email');
                    break;
                default:
                    break;
            }
            if (value !== 'NA' && value) {
                other.push({
                    stack: [
                        { text: e.name, style: 'subsubheader' },
                        { text: value, style: 'pval' }
                    ]
                });
            }
        });
        const chunkSize = 4;
        for (let i = 0; i < other.length; i += chunkSize) {
            const chunk = other?.slice(i, i + chunkSize);
            if (chunk.length == chunkSize) {
                data.table.body.push([...chunk]);
            }
            else {
                for (let x = chunk.length; x < chunkSize; x++) {
                    chunk[x] = '';
                }
                data.table.body.push([...chunk]);
            }
        }
        return data;
    }
    getAddress() {
        const data = {
            colSpan: 4,
            layout: 'noBorders',
            table: {
                widths: ['*', '*', '*', '*'],
                body: []
            }
        };
        if (this.hasPatientAddressEnabled) {
            data.table.body.push([
                {
                    colSpan: 4,
                    text: `Address`,
                    style: 'subheader'
                },
                '',
                '',
                ''
            ]);
            let other = [];
            this.appConfigService.patient_registration['address'].forEach((e) => {
                let value;
                switch (e.name) {
                    case 'Household Number':
                        value = this.patient?.person?.preferredAddress?.address6;
                        break;
                    case 'Corresponding Address 1':
                        value = this.patient?.person?.preferredAddress?.address1;
                        break;
                    case 'Corresponding Address 2':
                        value = this.patient?.person?.preferredAddress?.address2;
                        break;
                    case 'Block':
                        value = this.patient?.person?.preferredAddress?.address3;
                        break;
                    case 'Village/Town/City':
                        value = this.patient?.person.preferredAddress?.cityVillage;
                        break;
                    case 'District':
                        value = this.patient?.person.preferredAddress?.countyDistrict;
                        break;
                    case 'State':
                        value = this.patient?.person.preferredAddress?.stateProvince;
                        break;
                    case 'Country':
                        value = this.patient?.person.preferredAddress?.country;
                        break;
                    case 'Postal Code':
                        value = this.patient?.person.preferredAddress?.postalCode;
                        break;
                    default:
                        break;
                }
                if (value) {
                    other.push({
                        stack: [
                            { text: e.name, style: 'subsubheader' },
                            { text: value, style: 'pval' }
                        ]
                    });
                }
            });
            const chunkSize = 4;
            for (let i = 0; i < other.length; i += chunkSize) {
                const chunk = other?.slice(i, i + chunkSize);
                if (chunk.length == chunkSize) {
                    data.table.body.push([...chunk]);
                }
                else {
                    for (let x = chunk.length; x < chunkSize; x++) {
                        chunk[x] = '';
                    }
                    data.table.body.push([...chunk]);
                }
            }
        }
        else {
            data.table.body.push(['', '', '', '']);
        }
        return data;
    }
    getOtherInfo() {
        const data = {
            colSpan: 4,
            layout: 'noBorders',
            table: {
                widths: ['*', '*', '*', '*'],
                body: []
            }
        };
        if (this.hasPatientOtherEnabled) {
            data.table.body.push([
                {
                    colSpan: 4,
                    text: `Other Information`,
                    style: 'subheader'
                },
                '',
                '',
                ''
            ]);
            let other = [];
            this.appConfigService.patient_registration['other'].forEach((e) => {
                let value;
                switch (e.name) {
                    case 'Occupation':
                        value = this.getPersonAttributeValue('occupation');
                        break;
                    case 'Education':
                        value = this.getPersonAttributeValue('Education Level');
                        break;
                    case 'National ID':
                        value = this.getPersonAttributeValue('NationalID');
                        break;
                    case 'Economic Category':
                        value = this.getPersonAttributeValue('Economic Status');
                        break;
                    case 'Social Category':
                        value = this.getPersonAttributeValue('Caste');
                        break;
                    // case 'TMH Case Number':
                    //   value = this.getPersonAttributeValue('TMH Case Number');
                    //   break;
                    case 'Request ID':
                        value = this.getPersonAttributeValue('Request ID');
                        break;
                    case 'Discipline':
                        value = this.getPersonAttributeValue('Discipline');
                        break;
                    case 'Department':
                        value = this.getPersonAttributeValue('Department');
                        break;
                    case 'Relative Phone Number':
                        value = this.getPersonAttributeValue('Relative Phone Number');
                        break;
                    default:
                        break;
                }
                if (value != 'NA' && value) {
                    other.push({
                        stack: [
                            { text: e.name, style: 'subsubheader' },
                            { text: value, style: 'pval' }
                        ]
                    });
                }
            });
            const chunkSize = 4;
            for (let i = 0; i < other.length; i += chunkSize) {
                const chunk = other?.slice(i, i + chunkSize);
                if (chunk.length == chunkSize) {
                    data.table.body.push([...chunk]);
                }
                else {
                    for (let x = chunk.length; x < chunkSize; x++) {
                        chunk[x] = '';
                    }
                    data.table.body.push([...chunk]);
                }
            }
        }
        else {
            data.table.body.push(['', '', '', '']);
        }
        return data;
    }
    checkIsVisibleSection(pvsConfig) {
        return checkIsEnabled(pvsConfig.key, pvsConfig.is_enabled, {
            visitNotePresent: this.visitNotePresent,
            hasVitalsEnabled: this.hasVitalsEnabled
        });
    }
    /**
     * Retrieve the appropriate language value from an element.
     * @param {any} element - An object containing `lang` and `name`.
     * @return {string} - The value in the selected language or the first available one.
     * Defaults to `element.name` if no language value is found.
     */
    getLanguageValue(element) {
        return getFieldValueByLanguage(element);
    }
    isFeatureAvailable(featureName, notInclude = false) {
        return isFeaturePresent(featureName, notInclude);
    }
    renderReferralSectionPDF() {
        const referralFacility = isFeaturePresent('referralFacility', true);
        const priorityOfReferral = isFeaturePresent('priorityOfReferral', true);
        if (!referralFacility && !priorityOfReferral) {
            return {
                widths: ['35%', '65%'],
                headerRows: 1,
                body: [
                    [{ text: 'Referral to', style: 'tableHeader' }, { text: 'Referral for (Reason)', style: 'tableHeader' }],
                    ...this.getRecords('referral')
                ]
            };
        }
        if (!priorityOfReferral) {
            return {
                widths: ['35%', '35%', '30%'],
                headerRows: 1,
                body: [
                    [{ text: 'Referral to', style: 'tableHeader' }, { text: 'Referral facility', style: 'tableHeader' }, { text: 'Referral for (Reason)', style: 'tableHeader' }],
                    ...this.getRecords('referral')
                ]
            };
        }
        if (!referralFacility) {
            return {
                widths: ['35%', '35%', '30%'],
                headerRows: 1,
                body: [
                    [{ text: 'Referral to', style: 'tableHeader' }, { text: 'Priority', style: 'tableHeader' }, { text: 'Referral for (Reason)', style: 'tableHeader' }],
                    ...this.getRecords('referral')
                ]
            };
        }
        return {
            widths: ['30%', '30%', '10%', '30%'],
            headerRows: 1,
            body: [
                [{ text: 'Referral to', style: 'tableHeader' }, { text: 'Referral facility', style: 'tableHeader' }, { text: 'Priority', style: 'tableHeader' }, { text: 'Referral for (Reason)', style: 'tableHeader' }],
                ...this.getRecords('referral')
            ]
        };
    }
    /**
    * Get followUpInstructions for the visit
    * @returns {void}
    */
    checkIfFollowUpInstructionsPresent() {
        this.followUpInstructions = [];
        this.diagnosisService.getObs(this.baseUrl, this.visit.patient.uuid, this.conceptFollowUpInstruction).subscribe((response) => {
            response.results.forEach((obs) => {
                if (obs.encounter.visit.uuid === this.visit.uuid) {
                    this.followUpInstructions.push(obs);
                }
            });
        });
    }
    getDoctorRecommandation() {
        let subFields = [[
                {
                    colSpan: 4,
                    table: {
                        widths: [30, '*'],
                        headerRows: 1,
                        body: [
                            [{ image: 'medication', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Medications Advised', style: 'sectionheader', border: [false, false, false, true] }],
                            [
                                {
                                    colSpan: 2,
                                    table: {
                                        widths: ['*', 'auto', 'auto', 'auto', 'auto', 'auto'],
                                        headerRows: 1,
                                        body: [
                                            [{ text: 'Drug name', style: 'tableHeader' }, { text: 'Strength', style: 'tableHeader' }, { text: 'No. of days', style: 'tableHeader' }, { text: 'Timing', style: 'tableHeader' }, { text: 'Frequency', style: 'tableHeader' }, { text: 'Remarks', style: 'tableHeader' }],
                                            ...this.getRecords('medication')
                                        ]
                                    },
                                    layout: 'lightHorizontalLines'
                                }
                            ],
                            [{ text: 'Additional Instructions:', style: 'sectionheader', colSpan: 2 }, ''],
                            [
                                {
                                    colSpan: 2,
                                    ul: [
                                        ...this.getRecords('additionalInstruction')
                                    ]
                                }
                            ]
                        ]
                    },
                    layout: {
                        defaultBorder: false
                    }
                },
                '',
                '',
                ''
            ],
            [
                {
                    colSpan: 4,
                    table: {
                        widths: [30, '*'],
                        headerRows: 1,
                        body: [
                            [{ image: 'test', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Investigations Advised', style: 'sectionheader', border: [false, false, false, true] }],
                            [
                                {
                                    colSpan: 2,
                                    ul: [
                                        ...this.getRecords('test')
                                    ]
                                }
                            ]
                        ]
                    },
                    layout: {
                        defaultBorder: false
                    }
                },
                '',
                '',
                ''
            ],
            [
                {
                    colSpan: 4,
                    table: {
                        widths: [30, '*'],
                        headerRows: 1,
                        body: [
                            [{ image: 'referral', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Referral Advise', style: 'sectionheader', border: [false, false, false, true] }],
                            [
                                {
                                    colSpan: 2,
                                    table: this.renderReferralSectionPDF(),
                                    layout: 'lightHorizontalLines'
                                }
                            ]
                        ]
                    },
                    layout: {
                        defaultBorder: false
                    }
                },
                '',
                '',
                ''
            ]];
        if (this.isFeatureAvailable('doctor-recommendation')) {
            return [
                [
                    {
                        colSpan: 4,
                        table: {
                            widths: [30, '*', 'auto', 'auto'],
                            headerRows: 1,
                            body: [
                                [{ image: 'advice', width: 25, height: 25, border: [false, false, false, true] }, { colSpan: 3, text: 'Doctor\'s Recommendation', style: 'sectionheader', border: [false, false, false, true] }, '', ''],
                                ...subFields
                            ]
                        },
                        layout: {
                            defaultBorder: false
                        }
                    },
                    '',
                    '',
                    ''
                ]
            ];
        }
        else {
            return subFields;
        }
    }
    /**
   * Download prescription
   * @return {Promise<void>}
   */
    async downloadPrescription() {
        try {
            const docDefinition = await this.generatePdf(); // Get the PDF content
            pdfMake.createPdf(docDefinition).download('e-prescription.pdf');
        }
        catch (error) {
            console.error('Error generating or downloading PDF:', error);
        }
    }
    async generatePdf() {
        const userImg = await this.toObjectUrl(`${this.baseUrl}/personimage/${this.patient?.person.uuid}`);
        const logo = await this.toObjectUrl(`${this.configPublicURL}${this.logoImageURL}`);
        const checkUpReasonConfig = this.pvsConfigs.find((v) => v.key === this.pvsConstant['check_up_reason'].key);
        const vitalsConfig = this.pvsConfigs.find((v) => v.key === this.pvsConstant['vitals'].key);
        const pdfObj = {
            pageSize: 'A4',
            pageOrientation: 'portrait',
            pageMargins: [20, 50, 20, 40],
            watermark: { text: 'INTELEHEALTH', color: 'var(--color-gray)', opacity: 0.1, bold: true, italics: false, angle: 0, fontSize: 50 },
            header: {
                columns: [
                    { text: '' },
                    { image: (logo && !logo?.includes('application/json')) ? logo : 'logo', width: 90, height: 30, alignment: 'right', margin: [0, 10, 10, 0] }
                ]
            },
            footer: (currentPage, pageCount) => {
                return {
                    columns: [
                        [{ text: (pageCount === currentPage ? '*The diagnosis and prescription is through telemedicine consultation conducted as per applicable telemedicine guideline\n\n' : '\n\n'), bold: true, fontSize: 9, margin: [10, 0, 0, 0] }, { text: 'Copyright ©2023 Intelehealth, a 501 (c)(3) & Section 8 non-profit organisation', fontSize: 8, margin: [5, 0, 0, 0] }],
                        { text: '\n\n' + currentPage.toString() + ' of ' + pageCount, width: "7%", fontSize: 8, margin: [5, 5, 5, 5], alignment: 'right' }
                    ]
                };
            },
            content: [
                {
                    style: 'tableExample',
                    table: {
                        widths: ['25%', '30%', '22%', '23%'],
                        body: [
                            [
                                {
                                    colSpan: 4,
                                    fillColor: '#E6FFF3',
                                    text: 'Intelehealth e-Prescription',
                                    alignment: 'center',
                                    style: 'header'
                                },
                                '',
                                '',
                                ''
                            ],
                            [
                                {
                                    colSpan: 4,
                                    table: {
                                        widths: ['auto', '*'],
                                        body: [
                                            [
                                                {
                                                    image: (userImg && !userImg?.includes('application/json')) && this.checkPatientRegField('Profile Photo') ? userImg : 'user',
                                                    width: 30,
                                                    height: 30,
                                                    margin: [0, (userImg && !userImg?.includes('application/json')) ? 15 : 5, 0, 5]
                                                },
                                                [
                                                    {
                                                        text: `${this.patient?.person?.preferredName?.givenName?.toUpperCase()}` + (this.checkPatientRegField('Middle Name') && this.patient?.person?.preferredName?.middleName ? ' ' + this.patient?.person?.preferredName?.middleName?.toUpperCase() : '') + ` ${this.patient?.person?.preferredName?.familyName?.toUpperCase()}`,
                                                        bold: true,
                                                        margin: [10, 10, 0, 5],
                                                    }
                                                ]
                                            ]
                                        ]
                                    },
                                    layout: 'noBorders'
                                },
                                // {
                                //   table: {
                                //     widths: ['100%'],
                                //     body: [
                                //       [
                                //         [
                                //           ...this.getPatientRegFieldsForPDF('Gender'),
                                //           ...this.getPatientRegFieldsForPDF('Age'),
                                //         ]
                                //       ]
                                //     ]
                                //   },
                                //   layout: {
                                //     vLineWidth: function (i, node) {
                                //       if (i === 0) {
                                //         return 1;
                                //       }
                                //       return 0;
                                //     },
                                //     hLineWidth: function (i, node) {
                                //       return 0;
                                //     },
                                //     vLineColor: function (i) {
                                //       return "lightgray";
                                //     },
                                //   }
                                // },
                                // {
                                //   table: {
                                //     widths: ['100%'],
                                //     body: [
                                //       [
                                //         [
                                //           ...this.getPatientRegFieldsForPDF('Address'),
                                //           ...this.getPatientRegFieldsForPDF('Occupation')
                                //         ]
                                //       ]
                                //     ]
                                //   },
                                //   layout: {
                                //     vLineWidth: function (i, node) {
                                //       if (i === 0) {
                                //         return 1;
                                //       }
                                //       return 0;
                                //     },
                                //     hLineWidth: function (i, node) {
                                //       return 0;
                                //     },
                                //     vLineColor: function (i) {
                                //       return "lightgray";
                                //     },
                                //   }
                                // },
                                // {
                                //   table: {
                                //     widths: ['100%'],
                                //     body: [
                                //       [ 
                                //         [ 
                                //           ...this.getPatientRegFieldsForPDF('National ID'),
                                //           ...this.getPatientRegFieldsForPDF('Phone Number'),
                                //           , {text: ' ', style: 'subheader'}, {text: ' '}
                                //         ]
                                //       ],
                                //     ]
                                //   },
                                //   layout: {
                                //     vLineWidth: function (i, node) {
                                //       if (i === 0) {
                                //         return 1;
                                //       }
                                //       return 0;
                                //     },
                                //     hLineWidth: function (i, node) {
                                //       return 0;
                                //     },
                                //     vLineColor: function (i) {
                                //       return "lightgray";
                                //     },
                                //   }
                                // }
                            ],
                            [
                                this.getPersonalInfo()
                            ],
                            [
                                this.getAddress()
                            ],
                            [
                                this.getOtherInfo()
                            ],
                            [
                                {
                                    colSpan: 4,
                                    sectionName: 'cheifComplaint',
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'cheifComplaint', width: 25, height: 25, border: [false, false, false, true] }, { text: this.getLanguageValue(checkUpReasonConfig), style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    ul: [
                                                        ...this.getRecords('cheifComplaint')
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            [
                                {
                                    colSpan: 4,
                                    sectionName: 'vitals',
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'vitals', width: 25, height: 25, border: [false, false, false, true] }, { text: this.getLanguageValue(vitalsConfig), style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    ul: [
                                                        ...this.getRecords('Vitals')
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            [
                                {
                                    colSpan: 4,
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'consultation', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Consultation details', style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    ul: [
                                                        { text: [{ text: 'Patient ID:', bold: true }, ` ${this.getPersonAttributeValue('TMH Case Number') !== 'NA' ? this.getPersonAttributeValue('TMH Case Number') : this.patient?.identifiers?.[0]?.identifier}`], margin: [0, 5, 0, 5] },
                                                        { text: [{ text: 'Date of Consultation:', bold: true }, ` ${moment(this.completedEncounter?.encounterDatetime).format('DD MMM yyyy')}`], margin: [0, 5, 0, 5] }
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            this.getDiagnosis(),
                            ...this.getDiscussionSummary(),
                            [
                                {
                                    colSpan: 4,
                                    sectionName: "advice",
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'advice', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Advice', style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    ul: [
                                                        ...this.getRecords('advice')
                                                    ]
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            ...this.getDoctorRecommandation(),
                            [
                                {
                                    colSpan: 4,
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'referral', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Referral', style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    table: this.renderReferralSectionPDF(),
                                                    layout: 'lightHorizontalLines'
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            [
                                {
                                    colSpan: 4,
                                    sectionName: 'visitFollowUp',
                                    table: {
                                        widths: [30, '*'],
                                        headerRows: 1,
                                        body: [
                                            [{ image: 'followUp', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Follow-up', style: 'sectionheader', border: [false, false, false, true] }],
                                            [
                                                {
                                                    colSpan: 2,
                                                    table: {
                                                        widths: ['*', '*', '*', '*', '*'],
                                                        headerRows: 1,
                                                        body: [
                                                            [{ text: 'Follow-up Requested', style: 'tableHeader' }, (this.isFeatureAvailable('followUpType') ? { text: 'Type', style: 'tableHeader' } : []), { text: 'Date', style: 'tableHeader' }, { text: 'Time', style: 'tableHeader' }, { text: 'Reason', style: 'tableHeader' }],
                                                            ...this.getRecords('followUp')
                                                        ]
                                                    },
                                                    layout: 'lightHorizontalLines'
                                                }
                                            ]
                                        ]
                                    },
                                    layout: {
                                        defaultBorder: false
                                    }
                                },
                                '',
                                '',
                                ''
                            ],
                            [
                                {
                                    colSpan: 4,
                                    alignment: 'right',
                                    stack: [
                                        { image: `${this.signature?.value}`, width: 100, height: 100, margin: [0, 5, 0, 5] },
                                        { text: `Dr. ${this.consultedDoctor?.name}`, margin: [0, -30, 0, 0] },
                                        { text: `${this.consultedDoctor?.typeOfProfession}` },
                                        { text: `Registration No. ${this.consultedDoctor?.registrationNumber}` },
                                    ]
                                },
                                '',
                                '',
                                ''
                            ]
                        ]
                    },
                    layout: 'noBorders'
                }
            ],
            images: { ...precription, ...logo },
            styles: {
                header: {
                    fontSize: 14,
                    bold: true,
                    margin: [0, 10, 0, 10],
                    font: 'DmSans'
                },
                subheader: {
                    fontSize: 12,
                    bold: true,
                    margin: [0, 2, 0, 2],
                    font: 'DmSans'
                },
                subsubheader: {
                    fontSize: 10,
                    bold: true,
                    margin: [0, 2, 0, 2],
                    font: 'DmSans'
                },
                pval: {
                    fontSize: 10,
                    margin: [0, 2, 0, 2],
                    font: 'DmSans'
                },
                tableExample: {
                    margin: [0, 5, 0, 5],
                    fontSize: 12,
                    font: 'DmSans'
                },
                tableHeader: {
                    bold: true,
                    fontSize: 12,
                    color: 'black',
                    font: 'DmSans'
                },
                sectionheader: {
                    fontSize: 12,
                    bold: true,
                    margin: [0, 5, 0, 10],
                    font: 'DmSans'
                }
            },
            defaultStyle: {
                font: 'DmSans',
            },
            fonts: {
                DmSans: {
                    normal: 'DmSans-Regular.ttf',
                    bold: 'DmSans-Bold.ttf',
                    italics: 'DmSans-Italic.ttf',
                    bolditalics: 'DmSans-BoldItalic.ttf'
                }
            }
        };
        pdfObj.content[0].table.body = pdfObj.content[0].table.body.filter((section) => {
            if (!section[0] || typeof section[0] !== 'object' || !section[0].sectionName) {
                return true; // Keep rows that don't have a sectionName
            }
            if (section[0].sectionName === 'vitals' && (!this.hasVitalsEnabled || !vitalsConfig?.is_enabled))
                return false;
            if (section[0].sectionName === 'cheifComplaint' && !checkUpReasonConfig?.is_enabled)
                return false;
            if (section[0].sectionName === 'followUpInstructions' && !this.isFeatureAvailable('follow-up-instruction'))
                return false;
            if (section[0].sectionName === 'visitFollowUp' && !this.isFeatureAvailable('visitFollowUp'))
                return false;
            if (section[0].sectionName === 'advice' && !this.isFeatureAvailable('advice'))
                return false;
            return true;
        });
        return pdfObj;
    }
    getDiscussionSummary() {
        if (!this.appConfigService.patient_visit_summary?.dp_discussion_summary)
            return [];
        return [
            [
                {
                    colSpan: 4,
                    sectionName: "discussionSummary",
                    table: {
                        widths: [30, '*'],
                        headerRows: 1,
                        body: [
                            [{ image: 'followUp', width: 25, height: 25, border: [false, false, false, true] }, { text: 'Discussion Summary', style: 'sectionheader', border: [false, false, false, true] }],
                            [
                                {
                                    colSpan: 2,
                                    ul: [
                                        { text: this.discussionSummary, margin: [0, 5, 0, 5] }
                                    ]
                                }
                            ]
                        ]
                    },
                    layout: {
                        defaultBorder: false
                    }
                },
                '',
                '',
                ''
            ]
        ];
    }
    getDiagnosis() {
        if (!this.appConfigService.patient_visit_summary?.dp_dignosis_secondary)
            return [];
        return [
            {
                colSpan: 4,
                table: {
                    widths: [30, '*'],
                    headerRows: 1,
                    body: [
                        [
                            { image: 'diagnosis', width: 25, height: 25, border: [false, false, false, true] },
                            { text: 'Diagnosis Details', style: 'sectionheader', border: [false, false, false, true] }
                        ],
                        [
                            {
                                colSpan: 2,
                                table: {
                                    widths: this.appConfigService.patient_visit_summary?.dp_dignosis_secondary ? ['40%', '*', '*', '*'] : ['*', '*', '*'],
                                    headerRows: 1,
                                    body: [
                                        // Header Row
                                        this.appConfigService.patient_visit_summary?.dp_dignosis_secondary
                                            ? [
                                                { text: 'Diagnosis', style: 'tableHeader' },
                                                { text: 'Type', style: 'tableHeader' },
                                                { text: 'TNM', style: 'tableHeader' },
                                                { text: 'Other Staging', style: 'tableHeader' }
                                            ]
                                            : [
                                                { text: 'Diagnosis', style: 'tableHeader' },
                                                { text: 'Type', style: 'tableHeader' },
                                                { text: 'Status', style: 'tableHeader' }
                                            ],
                                        // Data Rows
                                        ...this.getRecords('diagnosis').map(row => {
                                            // Ensure each row has the correct number of cells
                                            const paddedRow = [...row];
                                            while (paddedRow.length < (this.appConfigService.patient_visit_summary?.dp_dignosis_secondary ? 4 : 3)) {
                                                paddedRow.push({ text: '' }); // Add empty cells if needed
                                            }
                                            return paddedRow;
                                        })
                                    ]
                                },
                                layout: 'lightHorizontalLines'
                            }
                        ]
                    ]
                },
                layout: {
                    defaultBorder: false
                }
            },
            {},
            {},
            {}
        ];
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: LibPresciptionComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }, { token: i2.AppConfigService }, { token: i3.TranslateService }, { token: i4.VisitService }, { token: i5.DiagnosisService }, { token: i6.ProfileService }, { token: i7.EnvConfigService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: LibPresciptionComponent, isStandalone: true, selector: "lib-presciption", inputs: { isDownloadPrescription: "isDownloadPrescription", visitId: "visitId", download: "download" }, providers: [AppConfigService], ngImport: i0, template: "<div class=\"title-con position-relative\" mat-dialog-title>\r\n  <div *ngIf=\"!isDownloadPrescription\">\r\n    <button class=\"btn_download_pdf\" (click)=\"downloadPrescription()\" data-test-id=\"btnDownload\"><mat-icon class=\"align-middle\">download</mat-icon><span>Download</span></button>\r\n  </div>\r\n  <h6>\r\n    {{ isDownloadPrescription ? ('Intelehealth e-'|translate) : \"\" }} {{'Prescription'|translate}}\r\n\r\n    <img\r\n      *ngIf=\"isDownloadPrescription\"\r\n      class=\"logo position-absolute\"\r\n      src=\"{{ configPublicURL + logoImageURL }}\"\r\n      width=\"100%\"\r\n      alt=\"\"\r\n    />\r\n  </h6>\r\n  <div class=\"close-btn-con\" *ngIf=\"!isDownloadPrescription\">\r\n    <button class=\"modal-close-btn desktop-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/CloseX.svg\" alt=\"\"></button>\r\n    <button class=\"modal-close-btn mobile-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/Close-icon.svg\" alt=\"\"></button>\r\n  </div>\r\n</div>\r\n<mat-dialog-content>\r\n  <div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row patient-info-wrapper\" *ngIf=\"patient\">\r\n        <div class=\"col-md-3 patient-info-section p-3\">\r\n          <div class=\"patient-img-item mb-2\">\r\n            <div class=\"patient-img\">\r\n              <img\r\n                src=\"{{ checkPatientRegField('Profile Photo') ? baseUrl + '/personimage/' + patient?.person.uuid : ''}}\"\r\n                alt=\"\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                data-test-id=\"imgPersonImage\"\r\n              />\r\n            </div>\r\n            <div class=\"ml-3\">\r\n              <h6 data-test-id=\"etPatientName\">\r\n                <span>{{ patient?.person?.preferredName?.givenName }}</span>\r\n                <span *ngIf=\"checkPatientRegField('Middle Name') && patient?.person?.preferredName?.middleName\">{{ ' ' + patient?.person?.preferredName?.middleName }}</span>\r\n                <span>{{ ' ' + patient?.person?.preferredName?.familyName }}</span>\r\n                <!-- <span *ngIf=\"checkPatientRegField('Gender')\">{{ \" (\" + (patient?.person.gender | translate) + \") \"}}</span> -->\r\n              </h6>\r\n              <p data-test-id=\"etPatienOpenMRSId\" *ngIf=\"isFeatureAvailable('tnmStaging')\">{{ getPersonAttributeValue('TMH Case Number') }}</p>\r\n              <p data-test-id=\"etPatienOpenMRSId\" *ngIf=\"!isFeatureAvailable('tnmStaging')\">{{ getPatientIdentifier('OpenMRS ID') }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Gender') && patient?.person.gender\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientGender\">{{'Gender'|translate}}</h6>\r\n            <p data-test-id=\"etPatientGender\">{{ patient?.person.gender | translate }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Age') && patient?.person.age\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientAge\">{{'Age'|translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ patient?.person.birthdate ? getAge(patient?.person.birthdate) : patient?.person.age + ' years'  }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Date of Birth') && patient?.person.birthdate !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientAge\">{{'Date of birth'|translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ patient?.person.birthdate | date : \"dd MMM, yyyy\" }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Request ID') && getPersonAttributeValue('Request ID') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Request ID' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Request ID') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Phone Number') && getPersonAttributeValue('Telephone Number') !== 'NA'\">\r\n          <div class=\"patient-info-item\">\r\n            <h6 data-test-id=\"etPatient\">{{'Phone Number'| translate}}:</h6>\r\n            <div class=\"contact-info\">\r\n              <p>\r\n                <img src=\"assets/svgs/phone-black.svg\" alt=\"\" />\r\n                {{ getPersonAttributeValue(\"Telephone Number\") }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Guardian Type') && getPersonAttributeValue('Guardian Type') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Guardian Type' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Guardian Type') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Guardian Name') && getPersonAttributeValue('Guardian Name') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Guardian Name' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Guardian Name') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Emergency Contact Name') && getPersonAttributeValue('Emergency Contact Name') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Emergency Contact Name' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Name') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Emergency Contact Number') && getPersonAttributeValue('Emergency Contact Number') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Emergency Contact Number' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Number') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Contact Type') && getPersonAttributeValue('Contact Type') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Contact Type' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Type') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Email') && getPersonAttributeValue('Email') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Email' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Email') }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <mat-tab-group class=\"patient-tab-group\" mat-align-tabs=\"start\">\r\n        <mat-tab label=\"{{'Address'| translate}}\" *ngIf=\"hasPatientAddressEnabled\">\r\n          <div class=\"rows patient-info-wrapper\">\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Household Number') && patient?.person?.preferredAddress?.address6\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Household number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address6 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Corresponding Address 1') && patient?.person?.preferredAddress?.address1\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Corresponding address 1' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address1 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Corresponding Address 2') && patient?.person?.preferredAddress?.address2\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Corresponding address 2' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address2 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Block') && patient?.person?.preferredAddress?.address3\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Block' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address3 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Village/Town/City') && patient?.person?.preferredAddress?.cityVillage\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Village/Town/City' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.cityVillage }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('District') && patient?.person?.preferredAddress?.countyDistrict\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'District' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.countyDistrict }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('State') && patient?.person?.preferredAddress?.stateProvince\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'State' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.stateProvince }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Country') && patient?.person?.preferredAddress?.country\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Country' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person?.preferredAddress?.country }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Postal Code') && patient?.person?.preferredAddress?.postalCode\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Postal Code' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person?.preferredAddress?.postalCode }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'Other' | translate}}\" *ngIf=\"hasPatientOtherEnabled\">\r\n          <div class=\"rows patient-info-wrapper\">\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Occupation') && getPersonAttributeValue('occupation') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Occupation' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('occupation') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Education') && getPersonAttributeValue('Education Level') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Education' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Education Level') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('National ID') && getPersonAttributeValue('NationalID') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'National ID' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('NationalID') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Economic Category') && getPersonAttributeValue('Economic Status') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Economic Category' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Economic Status') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Social Category') && getPersonAttributeValue('Caste') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Social Category' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Caste') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('TMH Case Number') && getPersonAttributeValue('TMH Case Number') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'TMH Case Number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('TMH Case Number') }}</p>\r\n              </div>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Discipline') && getPersonAttributeValue('Discipline') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Discipline' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Discipline') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Department') && getPersonAttributeValue('Department') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Department' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Department') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Relative Phone Number') && getPersonAttributeValue('Relative Phone Number') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Relative Phone Number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Relative Phone Number') }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <ng-container *ngFor=\"let pvsConfig of pvsConfigs; let pvsI = index;\">\r\n          <ng-container *ngIf=\"checkIsVisibleSection(pvsConfig) as checkVisibleSectionConfig\">\r\n            <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"checkVisibleSectionConfig.is_enabled\">\r\n              <div class=\"data-section\">\r\n                <div class=\"data-section-title\">\r\n                  <img\r\n                    *ngIf=\"pvsConstant[pvsConfig.key]?.logo\"\r\n                    src=\"{{ pvsConstant[pvsConfig.key]?.logo }}\"\r\n                    alt=\"\"\r\n                  />\r\n                  <h6>{{ getLanguageValue(pvsConfig) | translate}}</h6>\r\n                </div>\r\n\r\n                <ng-container [ngSwitch]=\"pvsConfig.key\">\r\n\r\n                  <!-- Consultation details -->\r\n                    <div class=\"data-section-content consultation-details\" *ngSwitchCase=\"pvsConstant['consultation_details'].key\">\r\n                      <ul *ngIf=\"isDownloadPrescription\" class=\"items-list\">\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Patient Id'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{patient?.identifiers?.[0]?.identifier}}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Date of Consultation'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{\r\n                              completedEncounter?.encounterDatetime\r\n                              | date : \"dd MMM, yyyy\"\r\n                              }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n    \r\n                      <ul *ngIf=\"!isDownloadPrescription\" class=\"items-list\">\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label class=\"border-0\">{{'Visit ID'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{\r\n                                visit?.uuid\r\n                                  ? (replaceWithStar(visit?.uuid) | uppercase)\r\n                                  : \"\"\r\n                              }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Visit Created'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{ visit?.startDatetime | date : \"dd MMM, yyyy\" }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Appointment on'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <span class=\"text-muted\">{{'No appointment'|translate}}</span>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Status'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <span\r\n                                [ngClass]=\"{\r\n                                  'text-important-red': visitStatus == 'Priority Visit',\r\n                                  'text-important-green':\r\n                                    [\r\n                                      'Awaiting Visit',\r\n                                      'In-progress Visit',\r\n                                      'Completed Visit',\r\n                                      'Ended Visit'\r\n                                    ].indexOf(visitStatus) != -1\r\n                                }\"\r\n                                >{{ (visitStatus)|translate }}</span\r\n                              >\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Location'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{ clinicName | titlecase }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Provided by'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <div class=\"visit-provider-con\">\r\n                                <span>{{ providerName }}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  <!-- END Consultation details  -->\r\n                  \r\n                  <!-- Vitals -->\r\n                    <div class=\"data-section-content\" *ngSwitchCase=\"pvsConstant['vitals'].key\">\r\n                      <ul class=\"items-list\">\r\n                        <li *ngFor=\"let v of vitals;\">\r\n                          <div class=\"list-item\">\r\n                            <label>{{getLanguageValue(v) | translate}}</label>\r\n                            <div class=\"list-item-content\" [class.text-muted]=\"!getObsValue(v.uuid, v.key)\">\r\n                              {{(getObsValue(v.uuid, v.key))?getObsValue(v.uuid, v.key):'No information' | translate}}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  <!-- END Vitals -->\r\n                      \r\n                  <!-- Checkup Reasons -->\r\n                  <ng-container *ngSwitchCase=\"pvsConstant['check_up_reason'].key\">\r\n                    <div class=\"data-section-content\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n                      <div class=\"cheif-complaint-wrapper\">\r\n                        <h6>{{'Chief complaint'|translate}}</h6>\r\n                        <div class=\"complaint-chips\">\r\n                          <div class=\"chip-item\" *ngFor=\"let c of cheifComplaints;\">\r\n                            {{c}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let ckr of checkUpReasonData\">\r\n                      <ng-container *ngIf=\"ckr.title != 'Associated symptoms'\">\r\n                        <h6 class=\"my-3\" [attr.data-test-id]=\"'etTitle'+ckr.title?.slice(0,3)+'Checkup'\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">{{ ckr.title }}</h6>\r\n                        <ul class=\"items-list pt-0\">\r\n                          <li *ngFor=\"let ckri of ckr.data\">\r\n                            <div class=\"list-item\">\r\n                              <label [attr.data-test-id]=\"'etKey'+ckri.key?.slice(0,3)+'Checkup'\">{{ ckri.key }}</label>\r\n                              <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.changingThisBreaksApplicationSecurity?.slice(0,4).trim()+'Checkup'\"\r\n                                [innerHTML]=\"ckri.value ? ckri.value : ('None' | translate)\">\r\n                              </div>\r\n                              <!-- <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.changingThisBreaksApplicationSecurity.slice(0,4).trim()+'Checkup'\"\r\n                              >\r\n                                {{ ckri.value ? ckri.value : ('None'|translate) }}\r\n                              </div> -->\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"ckr.title == 'Associated symptoms'\">\r\n                        <h6 class=\"my-3\" [attr.data-test-id]=\"'etTitle'+ckr.title.slice(0,3)+'Checkup'\">{{ ckr.title }}</h6>\r\n                        <ul class=\"items-list pt-0\">\r\n                          <li *ngFor=\"let ckri of ckr.data\">\r\n                            <div class=\"list-item-col\">\r\n                              <label [attr.data-test-id]=\"'etKey'+ckri.key.slice(0,3)+'Checkup'\">{{ ckri.key }}</label>\r\n                              <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.slice(0,4).trim()+'Checkup'\"\r\n                              >\r\n                                {{ ckri.value ? ckri.value :  ('None'|translate) }}\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                  <!-- END Checkup Reasons -->\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n            </ng-container>\r\n          </ng-container>\r\n      \r\n        <div *ngIf=\"!isDownloadPrescription\" class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/patient-interaction.svg\" alt=\"\" />\r\n              <h6>{{'Consulted doctor details'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul class=\"items-list\">\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label class=\"border-0\">{{'Name'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ consultedDoctor ? consultedDoctor.name : ('NA'|translate) }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Qualification'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{\r\n                        consultedDoctor ? consultedDoctor.typeOfProfession : ('NA'|translate)\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Speciality'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{\r\n                        consultedDoctor ? consultedDoctor.specialization : ('NA'|translate)\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Spoken with patient'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ spokenWithPatient }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/diagnosis.svg\" alt=\"\" />\r\n              <h6>{{'Diagnosis Details'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n              <ul class=\"items-list\">\r\n                <li *ngIf=\"!isDownloadPrescription\">\r\n                  <div class=\"list-item\">\r\n                    <label class=\"border-0\">{{'Has enough information for diagnosis?'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ existingDiagnosis.length ? ('Yes'|translate) : ('No'|translate) }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <div class=\"table-responsive\" *ngIf=\"existingDiagnosis.length\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Diagnosis'|translate}}</th>\r\n                      <th scope=\"col\">{{'Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'Status'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let d of existingDiagnosis; let i = index\">\r\n                      <td>{{ d.diagnosisName }}</td>\r\n                      <td>{{ d.diagnosisType }}</td>\r\n                      <td>{{ d.diagnosisStatus }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-section-content\" *ngIf=\"appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n              <div class=\"table-responsive\" *ngIf=\"dignosisSecondary\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Diagnosis'|translate}}</th>\r\n                      <th scope=\"col\">{{'Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'TNM'|translate}}</th>\r\n                      <th scope=\"col\">{{'Other Staging'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{ dignosisSecondary['diagnosis'] }}</td>\r\n                      <td>{{ dignosisSecondary['type'] }}</td>\r\n                      <td>{{ dignosisSecondary['tnm'] }}</td>\r\n                      <td>{{ dignosisSecondary['otherStaging'] }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"discussionSummary && appConfigService?.patient_visit_summary?.dp_discussion_summary\" class=\"col-md-12 px-3 mb-3\" >\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/note.svg\" alt=\"\" />\r\n              <h6>{{'Discussion Summary'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul class=\"items-list\">\r\n                <li>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ discussionSummary | translate}}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"notes?.length && isFeatureAvailable('visitNotes')\" class=\"col-md-12 px-3 mb-3\" >\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/note.svg\" alt=\"\" />\r\n              <h6>{{'Note'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul *ngIf=\"notes?.length\" class=\"items-list\">\r\n                <li *ngFor=\"let n of notes\">\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ n.value }}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('advice')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/advice.svg\" alt=\"\" />\r\n              <h6>{{'Advice'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul *ngIf=\"advices?.length; else noAdvices\" class=\"items-list\">\r\n                <li *ngFor=\"let a of advices\">\r\n                  <div\r\n                    class=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <span>{{ a.value }}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ng-template #noAdvices>\r\n                <tr>\r\n                  <td colspan=\"5\" class=\"text-center\">\r\n                   {{'No advices added' | translate}}\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('doctor-recommendation')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n              <h6>{{'Recommendation'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content pt-3\">\r\n              <ng-template *ngTemplateOutlet=\"tplDrRcom\"></ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"!isFeatureAvailable('doctor-recommendation')\">\r\n          <ng-template *ngTemplateOutlet=\"tplDrRcom\" ></ng-template>\r\n        </ng-container>\r\n\r\n        <ng-template #tplDrRcom >\r\n          <div class=\"col-md-12 px-3 mb-3\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/medication.svg\" alt=\"\" />\r\n                <h6>{{'Medications'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <div class=\"table-responsive\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_medication_secondary\">\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">{{'Drug name'|translate}}</th>\r\n                        <th scope=\"col\">{{'Strength'|translate}}</th>\r\n                        <th scope=\"col\">{{'No. of days'|translate}}</th>\r\n                        <th scope=\"col\">{{'Timing'|translate}}</th>\r\n                        <th scope=\"col\">{{'Frequency'|translate}}</th>\r\n                        <th scope=\"col\">{{'Remarks'|translate}}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <ng-container *ngIf=\"medicines.length; else noMedicines\">\r\n                        <tr *ngFor=\"let m of medicines; let i = index\">\r\n                          <td>{{ m.drug }}</td>\r\n                          <td>{{ m.strength }}</td>\r\n                          <td>{{ m.days }}</td>\r\n                          <td>{{ m.timing }}</td>\r\n                          <td>{{ m.frequency }}</td>\r\n                          <td>{{ m.remark }}</td>\r\n                        </tr>\r\n                      </ng-container>\r\n                      <ng-template #noMedicines>\r\n                        <tr>\r\n                          <td colspan=\"5\" class=\"text-center\">\r\n                           {{'No medicines added' | translate}}\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <h6 class=\"list-header mt-3 mb-2\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_medication_secondary\">{{'Additional instructions'|translate}}*</h6>\r\n                <ul *ngIf=\"additionalInstructions.length; else noInstuctions\" class=\"items-list\">\r\n                  <li *ngFor=\"let ai of additionalInstructions\">\r\n                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                      <span>{{ ai.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noInstuctions>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                     {{'No additional instructions added' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"col-md-12 px-3 mb-3\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n                <h6>{{'Investigations'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <ul *ngIf=\"tests?.length; else noTests\" class=\"items-list\">\r\n                  <li *ngFor=\"let t of tests\">\r\n                    <div\r\n                      class=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <span>{{ t.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noTests>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                     {{'No tests added!' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('follow-up-instruction')\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n                <h6>{{'Follow Up'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <ul *ngIf=\"followUpInstructions?.length; else noTests\" class=\"items-list\">\r\n                  <li *ngFor=\"let t of followUpInstructions\">\r\n                    <div\r\n                      class=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <span>{{ t.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noTests>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                    {{'No Follow Up Instructions added' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/referral.svg\" alt=\"\" />\r\n              <h6>{{'Referral'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <div class=\"table-responsive\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_referral_secondary\">\r\n\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Referral to'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('referralFacility', true)\">{{'Referral facility'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('priorityOfReferral', true)\">{{'Priority of Referral'|translate}}</th>\r\n                      <th scope=\"col\">{{'Referral for (Reason)'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <ng-container *ngIf=\"referrals.length; else noReferrals\">\r\n                      <tr *ngFor=\"let r of referrals; let i = index\">\r\n                        <td>{{ r.speciality }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('referralFacility', true)\">{{ r.facility }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('priorityOfReferral', true)\">{{ r.priority }}</td>\r\n                        <td>{{ r.reason }}</td>\r\n                      </tr>\r\n                    </ng-container>\r\n                    <ng-template #noReferrals>\r\n                      <tr>\r\n                        <td colspan=\"4\" class=\"text-center\">\r\n                          {{'No referrals added'|translate}}\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <ul class=\"items-list\" *ngIf=\"appConfigService?.patient_visit_summary?.dp_referral_secondary\">\r\n                <li>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ referralSecondary | translate}}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('visitFollowUp')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/follow-up.svg\" alt=\"\" />\r\n              <h6>{{'Follow-up'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Follow-up suggested'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('followUpType')\">{{'Follow-up Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'Follow-up Date'|translate}}</th>\r\n                      <th scope=\"col\">{{'Follow-up Time'|translate}}</th>\r\n                      <th scope=\"col\">{{'Reason for follow-up'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <ng-container *ngIf=\"followUp; else noFollowUp\">\r\n                      <tr>\r\n                        <td> {{ followUp.wantFollowUp }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('followUpType')\">{{ followUp.followUpType ? followUp.followUpType : '-' }}</td>\r\n                        <td> {{ followUp.followUpDate ? (followUp.followUpDate|date : \"mediumDate\") : '-' }}</td>\r\n                        <td> {{ followUp.followUpTime ? followUp.followUpTime : '-' }}</td>\r\n                        <td> {{ followUp.followUpReason ? followUp.followUpReason : '-' }}</td>\r\n                      </tr>\r\n                    </ng-container>\r\n                    <ng-template #noFollowUp>\r\n                      <tr>\r\n                        <td colspan=\"5\" class=\"text-center\">\r\n                          {{'No followup added' | translate}}\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"isDownloadPrescription\" class=\"signature w-100\">\r\n        <div class=\"text-right my-4\">\r\n          <img class=\"signature\" alt=\"\" [src]=\"signature?.value\" />\r\n          <div class=\"title-name\">{{ consultedDoctor?.name }}</div>\r\n          <div class=\"title\">{{ consultedDoctor?.typeOfProfession }}</div>\r\n          <div class=\"sub-title\">\r\n            {{'Registration No'|translate}}:{{ consultedDoctor?.registrationNumber }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"isDownloadPrescription\" class=\"col-md-12 mb-3 prescription-disclaimer\">\r\n        <b>*The diagnosis and prescription is through telemedicine consultation conducted as per applicable telemedicine guideline</b>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n", styles: [".modal-nav{position:fixed;top:0;left:0;width:100%;display:flex;align-items:center;justify-content:space-between;background:var(--color-darkestBlue) 86;padding:10px}.title-con{padding:24px 24px 16px;background:#e6fff3;position:relative}.title-con .close-btn-con{position:absolute;right:24px;top:24px}.title-con .close-btn-con .modal-close-btn{border:none;background:transparent;outline:none}.title-con h6{font-size:24px;line-height:150%;color:var(--color-darkestBlue);text-align:center;font-weight:700;margin-bottom:0}.main-content{padding:24px}.patient-info-wrapper{font-family:DM Sans}.patient-info-wrapper .patient-info-section .patient-img-item{display:flex;flex-direction:row;align-items:center}.patient-info-wrapper .patient-info-section .patient-img-item .patient-img{width:56px;height:50px;border-radius:50%;overflow:hidden}.patient-info-wrapper .patient-info-section .patient-img-item h6{margin-bottom:0;font-size:18px;font-weight:700;line-height:150%;color:var(--color-darkestBlue)}.patient-info-wrapper .patient-info-section .patient-img-item p{margin-bottom:0;color:var(--color-gray);font-size:16px;line-height:150%;word-break:break-all}.patient-info-wrapper .patient-info-section .patient-info-item h6{margin-bottom:0;font-size:16px;line-height:150%;color:var(--color-darkestBlue)}.patient-info-wrapper .patient-info-section .patient-info-item p{margin-bottom:0;color:var(--color-darkestBlue);font-size:16px;line-height:150%;word-break:break-all}.patient-info-wrapper .patient-info-section:last-child{border:none}.data-section .data-section-title{display:flex;align-items:center;border-bottom:1px solid rgba(178,175,190,.2);padding:5px 0}.data-section .data-section-title img{width:48px;margin-right:10px}.data-section .data-section-title h6{font-size:20px;line-height:150%;color:var(--color-darkestBlue);font-weight:700;margin-bottom:0}.items-list{font-family:DM Sans;font-size:16px;padding:24px 0 0 24px;margin-bottom:0}.items-list li{margin-bottom:5px}.items-list li .list-item{display:flex;flex-wrap:nowrap;align-items:center}.items-list li .list-item label{width:25%;margin-bottom:0;padding:5px 0}.items-list li .list-item .list-item-content{padding:5px 0}.items-list li .list-item-col{display:flex;flex-wrap:nowrap;flex-direction:column}.text-important-red{color:var(--color-red);font-weight:700}.text-important-green{color:var(--color-green);font-weight:700}.table th,.table td{vertical-align:middle;white-space:nowrap}.cheif-complaint-wrapper{padding:24px 0 0}.cheif-complaint-wrapper h6{font-size:18px;line-height:150%;color:var(--color-darkestBlue);font-weight:700}.cheif-complaint-wrapper .complaint-chips{display:flex;flex-wrap:wrap;margin-bottom:10px}.cheif-complaint-wrapper .complaint-chips .chip-item{padding:4px 8px;background:var(--color-lightRed);border-radius:4px;color:var(--color-white);margin:5px 5px 5px 0;font-size:16px;line-height:150%}@media (max-width: 768px){.patient-info-section{border-bottom:1px solid rgba(178,175,190,.2);border-right:none!important}.items-list{list-style-type:none;padding:5px 0 0}.items-list li .list-item{flex-direction:column;align-items:flex-start}.items-list li .list-item label,.items-list li .list-item-col label{width:100%;border-top:1px solid rgba(178,175,190,.2);font-weight:700;margin-top:.5rem}.data-section .data-section-title img{width:38px;margin-right:10px}.data-section .data-section-title h6,.cheif-complaint-wrapper h6{font-size:16px}.btn_download_pdf span{display:none}.desktop-close-btn{display:none!important}.mobile-close-btn{display:block!important}.main-content{padding:10px!important}}.signature{width:150px}.btn_download_pdf{position:absolute;color:var(--color-gray);border:unset;background:transparent;font-size:18px}.mobile-close-btn{display:none}.dekstop-close-btn{display:block}.list-header{font-size:14px;line-height:150%;margin-bottom:0;font-weight:700;color:var(--color-darkestBlue)}.prescription-disclaimer{font-size:12px!important}.rows{display:flex;flex-wrap:wrap}.data-section-content li span{white-space:break-spaces}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i8.NgClass, selector: "[ngClass]" }, { kind: "directive", type: i8.NgForOf, selector: "[ngFor][ngForOf]" }, { kind: "directive", type: i8.NgIf, selector: "[ngIf]" }, { kind: "directive", type: i8.NgTemplateOutlet, selector: "[ngTemplateOutlet]" }, { kind: "directive", type: i8.NgSwitch, selector: "[ngSwitch]" }, { kind: "directive", type: i8.NgSwitchCase, selector: "[ngSwitchCase]" }, { kind: "pipe", type: i8.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i8.TitleCasePipe, name: "titlecase" }, { kind: "pipe", type: i8.DatePipe, name: "date" }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i9.MatIcon, selector: "mat-icon", exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatButtonModule }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "ngmodule", type: MatTabsModule }, { kind: "component", type: i10.MatTab, selector: "mat-tab", exportAs: ["matTab"] }, { kind: "component", type: i10.MatTabGroup, selector: "mat-tab-group", outputs: ["selectedIndexChange", "focusChange", "animationDone", "selectedTabChange"], exportAs: ["matTabGroup"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "directive", type: DefaultImageDirective, selector: "img[src]", inputs: ["src"] }, { kind: "ngmodule", type: MatDialogModule }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: LibPresciptionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-presciption', standalone: true, imports: [
                        CommonModule,
                        MatIconModule,
                        MatButtonModule,
                        TranslateModule,
                        MatTabsModule,
                        MatTableModule,
                        DefaultImageDirective,
                        MatDialogModule
                    ], providers: [AppConfigService], schemas: [NO_ERRORS_SCHEMA], template: "<div class=\"title-con position-relative\" mat-dialog-title>\r\n  <div *ngIf=\"!isDownloadPrescription\">\r\n    <button class=\"btn_download_pdf\" (click)=\"downloadPrescription()\" data-test-id=\"btnDownload\"><mat-icon class=\"align-middle\">download</mat-icon><span>Download</span></button>\r\n  </div>\r\n  <h6>\r\n    {{ isDownloadPrescription ? ('Intelehealth e-'|translate) : \"\" }} {{'Prescription'|translate}}\r\n\r\n    <img\r\n      *ngIf=\"isDownloadPrescription\"\r\n      class=\"logo position-absolute\"\r\n      src=\"{{ configPublicURL + logoImageURL }}\"\r\n      width=\"100%\"\r\n      alt=\"\"\r\n    />\r\n  </h6>\r\n  <div class=\"close-btn-con\" *ngIf=\"!isDownloadPrescription\">\r\n    <button class=\"modal-close-btn desktop-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/CloseX.svg\" alt=\"\"></button>\r\n    <button class=\"modal-close-btn mobile-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/Close-icon.svg\" alt=\"\"></button>\r\n  </div>\r\n</div>\r\n<mat-dialog-content>\r\n  <div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row patient-info-wrapper\" *ngIf=\"patient\">\r\n        <div class=\"col-md-3 patient-info-section p-3\">\r\n          <div class=\"patient-img-item mb-2\">\r\n            <div class=\"patient-img\">\r\n              <img\r\n                src=\"{{ checkPatientRegField('Profile Photo') ? baseUrl + '/personimage/' + patient?.person.uuid : ''}}\"\r\n                alt=\"\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                data-test-id=\"imgPersonImage\"\r\n              />\r\n            </div>\r\n            <div class=\"ml-3\">\r\n              <h6 data-test-id=\"etPatientName\">\r\n                <span>{{ patient?.person?.preferredName?.givenName }}</span>\r\n                <span *ngIf=\"checkPatientRegField('Middle Name') && patient?.person?.preferredName?.middleName\">{{ ' ' + patient?.person?.preferredName?.middleName }}</span>\r\n                <span>{{ ' ' + patient?.person?.preferredName?.familyName }}</span>\r\n                <!-- <span *ngIf=\"checkPatientRegField('Gender')\">{{ \" (\" + (patient?.person.gender | translate) + \") \"}}</span> -->\r\n              </h6>\r\n              <p data-test-id=\"etPatienOpenMRSId\" *ngIf=\"isFeatureAvailable('tnmStaging')\">{{ getPersonAttributeValue('TMH Case Number') }}</p>\r\n              <p data-test-id=\"etPatienOpenMRSId\" *ngIf=\"!isFeatureAvailable('tnmStaging')\">{{ getPatientIdentifier('OpenMRS ID') }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Gender') && patient?.person.gender\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientGender\">{{'Gender'|translate}}</h6>\r\n            <p data-test-id=\"etPatientGender\">{{ patient?.person.gender | translate }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Age') && patient?.person.age\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientAge\">{{'Age'|translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ patient?.person.birthdate ? getAge(patient?.person.birthdate) : patient?.person.age + ' years'  }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Date of Birth') && patient?.person.birthdate !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatientAge\">{{'Date of birth'|translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ patient?.person.birthdate | date : \"dd MMM, yyyy\" }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-2 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Request ID') && getPersonAttributeValue('Request ID') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Request ID' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Request ID') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Phone Number') && getPersonAttributeValue('Telephone Number') !== 'NA'\">\r\n          <div class=\"patient-info-item\">\r\n            <h6 data-test-id=\"etPatient\">{{'Phone Number'| translate}}:</h6>\r\n            <div class=\"contact-info\">\r\n              <p>\r\n                <img src=\"assets/svgs/phone-black.svg\" alt=\"\" />\r\n                {{ getPersonAttributeValue(\"Telephone Number\") }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Guardian Type') && getPersonAttributeValue('Guardian Type') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Guardian Type' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Guardian Type') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Guardian Name') && getPersonAttributeValue('Guardian Name') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Guardian Name' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Guardian Name') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Emergency Contact Name') && getPersonAttributeValue('Emergency Contact Name') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Emergency Contact Name' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Name') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Emergency Contact Number') && getPersonAttributeValue('Emergency Contact Number') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Emergency Contact Number' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Number') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Contact Type') && getPersonAttributeValue('Contact Type') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Contact Type' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Emergency Contact Type') }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Email') && getPersonAttributeValue('Email') !== 'NA'\">\r\n          <div class=\"patient-info-item mb-3\">\r\n            <h6 data-test-id=\"etPatient\">{{'Email' | translate}}</h6>\r\n            <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Email') }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <mat-tab-group class=\"patient-tab-group\" mat-align-tabs=\"start\">\r\n        <mat-tab label=\"{{'Address'| translate}}\" *ngIf=\"hasPatientAddressEnabled\">\r\n          <div class=\"rows patient-info-wrapper\">\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Household Number') && patient?.person?.preferredAddress?.address6\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Household number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address6 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Corresponding Address 1') && patient?.person?.preferredAddress?.address1\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Corresponding address 1' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address1 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Corresponding Address 2') && patient?.person?.preferredAddress?.address2\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Corresponding address 2' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address2 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Block') && patient?.person?.preferredAddress?.address3\">\r\n              <div class=\"patient-info-item\">\r\n                <h6 data-test-id=\"etPatient\">{{'Block' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">\r\n                  {{ patient?.person?.preferredAddress?.address3 }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Village/Town/City') && patient?.person?.preferredAddress?.cityVillage\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Village/Town/City' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.cityVillage }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('District') && patient?.person?.preferredAddress?.countyDistrict\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'District' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.countyDistrict }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('State') && patient?.person?.preferredAddress?.stateProvince\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'State' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person.preferredAddress.stateProvince }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Country') && patient?.person?.preferredAddress?.country\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Country' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person?.preferredAddress?.country }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Postal Code') && patient?.person?.preferredAddress?.postalCode\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Postal Code' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ patient?.person?.preferredAddress?.postalCode }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"{{'Other' | translate}}\" *ngIf=\"hasPatientOtherEnabled\">\r\n          <div class=\"rows patient-info-wrapper\">\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Occupation') && getPersonAttributeValue('occupation') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Occupation' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('occupation') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Education') && getPersonAttributeValue('Education Level') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Education' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Education Level') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('National ID') && getPersonAttributeValue('NationalID') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'National ID' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('NationalID') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Economic Category') && getPersonAttributeValue('Economic Status') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Economic Category' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Economic Status') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Social Category') && getPersonAttributeValue('Caste') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Social Category' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Caste') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('TMH Case Number') && getPersonAttributeValue('TMH Case Number') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'TMH Case Number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('TMH Case Number') }}</p>\r\n              </div>\r\n            </div> -->\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Discipline') && getPersonAttributeValue('Discipline') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Discipline' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Discipline') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Department') && getPersonAttributeValue('Department') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Department' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Department') }}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3 patient-info-section p-3\" *ngIf=\"checkPatientRegField('Relative Phone Number') && getPersonAttributeValue('Relative Phone Number') !== 'NA'\">\r\n              <div class=\"patient-info-item mb-3\">\r\n                <h6 data-test-id=\"etPatient\">{{'Relative Phone Number' | translate}}</h6>\r\n                <p data-test-id=\"etPatient\">{{ getPersonAttributeValue('Relative Phone Number') }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <ng-container *ngFor=\"let pvsConfig of pvsConfigs; let pvsI = index;\">\r\n          <ng-container *ngIf=\"checkIsVisibleSection(pvsConfig) as checkVisibleSectionConfig\">\r\n            <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"checkVisibleSectionConfig.is_enabled\">\r\n              <div class=\"data-section\">\r\n                <div class=\"data-section-title\">\r\n                  <img\r\n                    *ngIf=\"pvsConstant[pvsConfig.key]?.logo\"\r\n                    src=\"{{ pvsConstant[pvsConfig.key]?.logo }}\"\r\n                    alt=\"\"\r\n                  />\r\n                  <h6>{{ getLanguageValue(pvsConfig) | translate}}</h6>\r\n                </div>\r\n\r\n                <ng-container [ngSwitch]=\"pvsConfig.key\">\r\n\r\n                  <!-- Consultation details -->\r\n                    <div class=\"data-section-content consultation-details\" *ngSwitchCase=\"pvsConstant['consultation_details'].key\">\r\n                      <ul *ngIf=\"isDownloadPrescription\" class=\"items-list\">\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Patient Id'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{patient?.identifiers?.[0]?.identifier}}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Date of Consultation'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{\r\n                              completedEncounter?.encounterDatetime\r\n                              | date : \"dd MMM, yyyy\"\r\n                              }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n    \r\n                      <ul *ngIf=\"!isDownloadPrescription\" class=\"items-list\">\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label class=\"border-0\">{{'Visit ID'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{\r\n                                visit?.uuid\r\n                                  ? (replaceWithStar(visit?.uuid) | uppercase)\r\n                                  : \"\"\r\n                              }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Visit Created'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{ visit?.startDatetime | date : \"dd MMM, yyyy\" }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Appointment on'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <span class=\"text-muted\">{{'No appointment'|translate}}</span>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Status'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <span\r\n                                [ngClass]=\"{\r\n                                  'text-important-red': visitStatus == 'Priority Visit',\r\n                                  'text-important-green':\r\n                                    [\r\n                                      'Awaiting Visit',\r\n                                      'In-progress Visit',\r\n                                      'Completed Visit',\r\n                                      'Ended Visit'\r\n                                    ].indexOf(visitStatus) != -1\r\n                                }\"\r\n                                >{{ (visitStatus)|translate }}</span\r\n                              >\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Location'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              {{ clinicName | titlecase }}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div class=\"list-item\">\r\n                            <label>{{'Provided by'|translate}}</label>\r\n                            <div class=\"list-item-content\">\r\n                              <div class=\"visit-provider-con\">\r\n                                <span>{{ providerName }}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  <!-- END Consultation details  -->\r\n                  \r\n                  <!-- Vitals -->\r\n                    <div class=\"data-section-content\" *ngSwitchCase=\"pvsConstant['vitals'].key\">\r\n                      <ul class=\"items-list\">\r\n                        <li *ngFor=\"let v of vitals;\">\r\n                          <div class=\"list-item\">\r\n                            <label>{{getLanguageValue(v) | translate}}</label>\r\n                            <div class=\"list-item-content\" [class.text-muted]=\"!getObsValue(v.uuid, v.key)\">\r\n                              {{(getObsValue(v.uuid, v.key))?getObsValue(v.uuid, v.key):'No information' | translate}}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  <!-- END Vitals -->\r\n                      \r\n                  <!-- Checkup Reasons -->\r\n                  <ng-container *ngSwitchCase=\"pvsConstant['check_up_reason'].key\">\r\n                    <div class=\"data-section-content\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n                      <div class=\"cheif-complaint-wrapper\">\r\n                        <h6>{{'Chief complaint'|translate}}</h6>\r\n                        <div class=\"complaint-chips\">\r\n                          <div class=\"chip-item\" *ngFor=\"let c of cheifComplaints;\">\r\n                            {{c}}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ng-container *ngFor=\"let ckr of checkUpReasonData\">\r\n                      <ng-container *ngIf=\"ckr.title != 'Associated symptoms'\">\r\n                        <h6 class=\"my-3\" [attr.data-test-id]=\"'etTitle'+ckr.title?.slice(0,3)+'Checkup'\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">{{ ckr.title }}</h6>\r\n                        <ul class=\"items-list pt-0\">\r\n                          <li *ngFor=\"let ckri of ckr.data\">\r\n                            <div class=\"list-item\">\r\n                              <label [attr.data-test-id]=\"'etKey'+ckri.key?.slice(0,3)+'Checkup'\">{{ ckri.key }}</label>\r\n                              <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.changingThisBreaksApplicationSecurity?.slice(0,4).trim()+'Checkup'\"\r\n                                [innerHTML]=\"ckri.value ? ckri.value : ('None' | translate)\">\r\n                              </div>\r\n                              <!-- <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.changingThisBreaksApplicationSecurity.slice(0,4).trim()+'Checkup'\"\r\n                              >\r\n                                {{ ckri.value ? ckri.value : ('None'|translate) }}\r\n                              </div> -->\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"ckr.title == 'Associated symptoms'\">\r\n                        <h6 class=\"my-3\" [attr.data-test-id]=\"'etTitle'+ckr.title.slice(0,3)+'Checkup'\">{{ ckr.title }}</h6>\r\n                        <ul class=\"items-list pt-0\">\r\n                          <li *ngFor=\"let ckri of ckr.data\">\r\n                            <div class=\"list-item-col\">\r\n                              <label [attr.data-test-id]=\"'etKey'+ckri.key.slice(0,3)+'Checkup'\">{{ ckri.key }}</label>\r\n                              <div\r\n                                class=\"list-item-content\"\r\n                                [class.text-muted]=\"!ckri.value\"\r\n                                [attr.data-test-id]=\"'etValue'+ckri.value.slice(0,4).trim()+'Checkup'\"\r\n                              >\r\n                                {{ ckri.value ? ckri.value :  ('None'|translate) }}\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                  <!-- END Checkup Reasons -->\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n            </ng-container>\r\n          </ng-container>\r\n      \r\n        <div *ngIf=\"!isDownloadPrescription\" class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/patient-interaction.svg\" alt=\"\" />\r\n              <h6>{{'Consulted doctor details'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul class=\"items-list\">\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label class=\"border-0\">{{'Name'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ consultedDoctor ? consultedDoctor.name : ('NA'|translate) }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Qualification'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{\r\n                        consultedDoctor ? consultedDoctor.typeOfProfession : ('NA'|translate)\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Speciality'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{\r\n                        consultedDoctor ? consultedDoctor.specialization : ('NA'|translate)\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"list-item\">\r\n                    <label>{{'Spoken with patient'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ spokenWithPatient }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/diagnosis.svg\" alt=\"\" />\r\n              <h6>{{'Diagnosis Details'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n              <ul class=\"items-list\">\r\n                <li *ngIf=\"!isDownloadPrescription\">\r\n                  <div class=\"list-item\">\r\n                    <label class=\"border-0\">{{'Has enough information for diagnosis?'|translate}}</label>\r\n                    <div class=\"list-item-content\">\r\n                      {{ existingDiagnosis.length ? ('Yes'|translate) : ('No'|translate) }}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <div class=\"table-responsive\" *ngIf=\"existingDiagnosis.length\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Diagnosis'|translate}}</th>\r\n                      <th scope=\"col\">{{'Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'Status'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let d of existingDiagnosis; let i = index\">\r\n                      <td>{{ d.diagnosisName }}</td>\r\n                      <td>{{ d.diagnosisType }}</td>\r\n                      <td>{{ d.diagnosisStatus }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"data-section-content\" *ngIf=\"appConfigService?.patient_visit_summary?.dp_dignosis_secondary\">\r\n              <div class=\"table-responsive\" *ngIf=\"dignosisSecondary\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Diagnosis'|translate}}</th>\r\n                      <th scope=\"col\">{{'Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'TNM'|translate}}</th>\r\n                      <th scope=\"col\">{{'Other Staging'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{{ dignosisSecondary['diagnosis'] }}</td>\r\n                      <td>{{ dignosisSecondary['type'] }}</td>\r\n                      <td>{{ dignosisSecondary['tnm'] }}</td>\r\n                      <td>{{ dignosisSecondary['otherStaging'] }}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"discussionSummary && appConfigService?.patient_visit_summary?.dp_discussion_summary\" class=\"col-md-12 px-3 mb-3\" >\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/note.svg\" alt=\"\" />\r\n              <h6>{{'Discussion Summary'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul class=\"items-list\">\r\n                <li>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ discussionSummary | translate}}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"notes?.length && isFeatureAvailable('visitNotes')\" class=\"col-md-12 px-3 mb-3\" >\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/note.svg\" alt=\"\" />\r\n              <h6>{{'Note'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul *ngIf=\"notes?.length\" class=\"items-list\">\r\n                <li *ngFor=\"let n of notes\">\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ n.value }}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('advice')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/advice.svg\" alt=\"\" />\r\n              <h6>{{'Advice'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <ul *ngIf=\"advices?.length; else noAdvices\" class=\"items-list\">\r\n                <li *ngFor=\"let a of advices\">\r\n                  <div\r\n                    class=\"d-flex justify-content-between align-items-center\"\r\n                  >\r\n                    <span>{{ a.value }}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ng-template #noAdvices>\r\n                <tr>\r\n                  <td colspan=\"5\" class=\"text-center\">\r\n                   {{'No advices added' | translate}}\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('doctor-recommendation')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n              <h6>{{'Recommendation'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content pt-3\">\r\n              <ng-template *ngTemplateOutlet=\"tplDrRcom\"></ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"!isFeatureAvailable('doctor-recommendation')\">\r\n          <ng-template *ngTemplateOutlet=\"tplDrRcom\" ></ng-template>\r\n        </ng-container>\r\n\r\n        <ng-template #tplDrRcom >\r\n          <div class=\"col-md-12 px-3 mb-3\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/medication.svg\" alt=\"\" />\r\n                <h6>{{'Medications'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <div class=\"table-responsive\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_medication_secondary\">\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">{{'Drug name'|translate}}</th>\r\n                        <th scope=\"col\">{{'Strength'|translate}}</th>\r\n                        <th scope=\"col\">{{'No. of days'|translate}}</th>\r\n                        <th scope=\"col\">{{'Timing'|translate}}</th>\r\n                        <th scope=\"col\">{{'Frequency'|translate}}</th>\r\n                        <th scope=\"col\">{{'Remarks'|translate}}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <ng-container *ngIf=\"medicines.length; else noMedicines\">\r\n                        <tr *ngFor=\"let m of medicines; let i = index\">\r\n                          <td>{{ m.drug }}</td>\r\n                          <td>{{ m.strength }}</td>\r\n                          <td>{{ m.days }}</td>\r\n                          <td>{{ m.timing }}</td>\r\n                          <td>{{ m.frequency }}</td>\r\n                          <td>{{ m.remark }}</td>\r\n                        </tr>\r\n                      </ng-container>\r\n                      <ng-template #noMedicines>\r\n                        <tr>\r\n                          <td colspan=\"5\" class=\"text-center\">\r\n                           {{'No medicines added' | translate}}\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <h6 class=\"list-header mt-3 mb-2\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_medication_secondary\">{{'Additional instructions'|translate}}*</h6>\r\n                <ul *ngIf=\"additionalInstructions.length; else noInstuctions\" class=\"items-list\">\r\n                  <li *ngFor=\"let ai of additionalInstructions\">\r\n                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                      <span>{{ ai.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noInstuctions>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                     {{'No additional instructions added' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div class=\"col-md-12 px-3 mb-3\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n                <h6>{{'Investigations'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <ul *ngIf=\"tests?.length; else noTests\" class=\"items-list\">\r\n                  <li *ngFor=\"let t of tests\">\r\n                    <div\r\n                      class=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <span>{{ t.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noTests>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                     {{'No tests added!' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('follow-up-instruction')\">\r\n            <div class=\"data-section\">\r\n              <div class=\"data-section-title\">\r\n                <img src=\"assets/svgs/test.svg\" alt=\"\" />\r\n                <h6>{{'Follow Up'|translate}}</h6>\r\n              </div>\r\n              <div class=\"data-section-content\">\r\n                <ul *ngIf=\"followUpInstructions?.length; else noTests\" class=\"items-list\">\r\n                  <li *ngFor=\"let t of followUpInstructions\">\r\n                    <div\r\n                      class=\"d-flex justify-content-between align-items-center\"\r\n                    >\r\n                      <span>{{ t.value }}</span>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n                <ng-template #noTests>\r\n                  <tr>\r\n                    <td colspan=\"5\" class=\"text-center\">\r\n                    {{'No Follow Up Instructions added' | translate}}\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/referral.svg\" alt=\"\" />\r\n              <h6>{{'Referral'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <div class=\"table-responsive\" *ngIf=\"!appConfigService?.patient_visit_summary?.dp_referral_secondary\">\r\n\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Referral to'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('referralFacility', true)\">{{'Referral facility'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('priorityOfReferral', true)\">{{'Priority of Referral'|translate}}</th>\r\n                      <th scope=\"col\">{{'Referral for (Reason)'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <ng-container *ngIf=\"referrals.length; else noReferrals\">\r\n                      <tr *ngFor=\"let r of referrals; let i = index\">\r\n                        <td>{{ r.speciality }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('referralFacility', true)\">{{ r.facility }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('priorityOfReferral', true)\">{{ r.priority }}</td>\r\n                        <td>{{ r.reason }}</td>\r\n                      </tr>\r\n                    </ng-container>\r\n                    <ng-template #noReferrals>\r\n                      <tr>\r\n                        <td colspan=\"4\" class=\"text-center\">\r\n                          {{'No referrals added'|translate}}\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <ul class=\"items-list\" *ngIf=\"appConfigService?.patient_visit_summary?.dp_referral_secondary\">\r\n                <li>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{{ referralSecondary | translate}}</span>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 px-3 mb-3\" *ngIf=\"isFeatureAvailable('visitFollowUp')\">\r\n          <div class=\"data-section\">\r\n            <div class=\"data-section-title\">\r\n              <img src=\"assets/svgs/follow-up.svg\" alt=\"\" />\r\n              <h6>{{'Follow-up'|translate}}</h6>\r\n            </div>\r\n            <div class=\"data-section-content\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">{{'Follow-up suggested'|translate}}</th>\r\n                      <th scope=\"col\" *ngIf=\"isFeatureAvailable('followUpType')\">{{'Follow-up Type'|translate}}</th>\r\n                      <th scope=\"col\">{{'Follow-up Date'|translate}}</th>\r\n                      <th scope=\"col\">{{'Follow-up Time'|translate}}</th>\r\n                      <th scope=\"col\">{{'Reason for follow-up'|translate}}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <ng-container *ngIf=\"followUp; else noFollowUp\">\r\n                      <tr>\r\n                        <td> {{ followUp.wantFollowUp }}</td>\r\n                        <td *ngIf=\"isFeatureAvailable('followUpType')\">{{ followUp.followUpType ? followUp.followUpType : '-' }}</td>\r\n                        <td> {{ followUp.followUpDate ? (followUp.followUpDate|date : \"mediumDate\") : '-' }}</td>\r\n                        <td> {{ followUp.followUpTime ? followUp.followUpTime : '-' }}</td>\r\n                        <td> {{ followUp.followUpReason ? followUp.followUpReason : '-' }}</td>\r\n                      </tr>\r\n                    </ng-container>\r\n                    <ng-template #noFollowUp>\r\n                      <tr>\r\n                        <td colspan=\"5\" class=\"text-center\">\r\n                          {{'No followup added' | translate}}\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"isDownloadPrescription\" class=\"signature w-100\">\r\n        <div class=\"text-right my-4\">\r\n          <img class=\"signature\" alt=\"\" [src]=\"signature?.value\" />\r\n          <div class=\"title-name\">{{ consultedDoctor?.name }}</div>\r\n          <div class=\"title\">{{ consultedDoctor?.typeOfProfession }}</div>\r\n          <div class=\"sub-title\">\r\n            {{'Registration No'|translate}}:{{ consultedDoctor?.registrationNumber }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"isDownloadPrescription\" class=\"col-md-12 mb-3 prescription-disclaimer\">\r\n        <b>*The diagnosis and prescription is through telemedicine consultation conducted as per applicable telemedicine guideline</b>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n", styles: [".modal-nav{position:fixed;top:0;left:0;width:100%;display:flex;align-items:center;justify-content:space-between;background:var(--color-darkestBlue) 86;padding:10px}.title-con{padding:24px 24px 16px;background:#e6fff3;position:relative}.title-con .close-btn-con{position:absolute;right:24px;top:24px}.title-con .close-btn-con .modal-close-btn{border:none;background:transparent;outline:none}.title-con h6{font-size:24px;line-height:150%;color:var(--color-darkestBlue);text-align:center;font-weight:700;margin-bottom:0}.main-content{padding:24px}.patient-info-wrapper{font-family:DM Sans}.patient-info-wrapper .patient-info-section .patient-img-item{display:flex;flex-direction:row;align-items:center}.patient-info-wrapper .patient-info-section .patient-img-item .patient-img{width:56px;height:50px;border-radius:50%;overflow:hidden}.patient-info-wrapper .patient-info-section .patient-img-item h6{margin-bottom:0;font-size:18px;font-weight:700;line-height:150%;color:var(--color-darkestBlue)}.patient-info-wrapper .patient-info-section .patient-img-item p{margin-bottom:0;color:var(--color-gray);font-size:16px;line-height:150%;word-break:break-all}.patient-info-wrapper .patient-info-section .patient-info-item h6{margin-bottom:0;font-size:16px;line-height:150%;color:var(--color-darkestBlue)}.patient-info-wrapper .patient-info-section .patient-info-item p{margin-bottom:0;color:var(--color-darkestBlue);font-size:16px;line-height:150%;word-break:break-all}.patient-info-wrapper .patient-info-section:last-child{border:none}.data-section .data-section-title{display:flex;align-items:center;border-bottom:1px solid rgba(178,175,190,.2);padding:5px 0}.data-section .data-section-title img{width:48px;margin-right:10px}.data-section .data-section-title h6{font-size:20px;line-height:150%;color:var(--color-darkestBlue);font-weight:700;margin-bottom:0}.items-list{font-family:DM Sans;font-size:16px;padding:24px 0 0 24px;margin-bottom:0}.items-list li{margin-bottom:5px}.items-list li .list-item{display:flex;flex-wrap:nowrap;align-items:center}.items-list li .list-item label{width:25%;margin-bottom:0;padding:5px 0}.items-list li .list-item .list-item-content{padding:5px 0}.items-list li .list-item-col{display:flex;flex-wrap:nowrap;flex-direction:column}.text-important-red{color:var(--color-red);font-weight:700}.text-important-green{color:var(--color-green);font-weight:700}.table th,.table td{vertical-align:middle;white-space:nowrap}.cheif-complaint-wrapper{padding:24px 0 0}.cheif-complaint-wrapper h6{font-size:18px;line-height:150%;color:var(--color-darkestBlue);font-weight:700}.cheif-complaint-wrapper .complaint-chips{display:flex;flex-wrap:wrap;margin-bottom:10px}.cheif-complaint-wrapper .complaint-chips .chip-item{padding:4px 8px;background:var(--color-lightRed);border-radius:4px;color:var(--color-white);margin:5px 5px 5px 0;font-size:16px;line-height:150%}@media (max-width: 768px){.patient-info-section{border-bottom:1px solid rgba(178,175,190,.2);border-right:none!important}.items-list{list-style-type:none;padding:5px 0 0}.items-list li .list-item{flex-direction:column;align-items:flex-start}.items-list li .list-item label,.items-list li .list-item-col label{width:100%;border-top:1px solid rgba(178,175,190,.2);font-weight:700;margin-top:.5rem}.data-section .data-section-title img{width:38px;margin-right:10px}.data-section .data-section-title h6,.cheif-complaint-wrapper h6{font-size:16px}.btn_download_pdf span{display:none}.desktop-close-btn{display:none!important}.mobile-close-btn{display:block!important}.main-content{padding:10px!important}}.signature{width:150px}.btn_download_pdf{position:absolute;color:var(--color-gray);border:unset;background:transparent;font-size:18px}.mobile-close-btn{display:none}.dekstop-close-btn{display:block}.list-header{font-size:14px;line-height:150%;margin-bottom:0;font-weight:700;color:var(--color-darkestBlue)}.prescription-disclaimer{font-size:12px!important}.rows{display:flex;flex-wrap:wrap}.data-section-content li span{white-space:break-spaces}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }, { type: i2.AppConfigService }, { type: i3.TranslateService }, { type: i4.VisitService }, { type: i5.DiagnosisService }, { type: i6.ProfileService }, { type: i7.EnvConfigService }]; }, propDecorators: { isDownloadPrescription: [{
                type: Input
            }], visitId: [{
                type: Input
            }], download: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,